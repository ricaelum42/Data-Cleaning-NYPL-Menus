[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column venue using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column venue using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "physical_description",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column physical_description using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "physical_description",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column physical_description using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "notes",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column notes using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "notes",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column notes using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "status",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column status using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "status",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column status using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "date",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column date using expression value.toDate()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.replace(/[!#%?\\\\\\/\\(\\)\\[\\]]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.replace(/[!#%?\\\\\\/\\(\\)\\[\\]]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column venue using expression value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "physical_description",
    "expression": "value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column physical_description using expression value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "status",
    "expression": "value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column status using expression value.replace(/[!#%?\\\\\\/\\(\\)\\[\\];]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column venue using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "notes",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column notes using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "status",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column status using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "page_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column page_count using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "dish_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column dish_count using expression value.toNumber()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "sponsor",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "sponsor_cluster",
    "columnInsertIndex": 3,
    "description": "Create column sponsor_cluster at index 3 based on column sponsor using expression grel:value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Red Star Line - Antwerpen - Ny",
          "Red Star Line - Antwerpen Ny",
          "Red Star Line - Antwerpen -ny",
          "Red Star Line -antwerpen Ny",
          "Red Star Line -antwerpen - Ny",
          "Red Star Line -antwerpen -ny",
          "Red Star Line- Antwerpen -ny",
          "Red Star Line- Antwerpen Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line -antwerpen - Ny"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyd - Bremen",
          "Norddeutscher Lloyd Bremen;",
          "Norddeutscher Lloyd, Bremen",
          "Bremen Norddeutscher Lloyd",
          "Norddeutscher Lloyd -bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Fifth Avenue Hotel",
          "Fifth Avenue Hotel ",
          "Fifth Avenue Hotel;",
          "Fifth Avenue Hotel}"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Avenue Hotel"
      },
      {
        "from": [
          "Childs",
          "Childs'",
          "Child's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Childs"
      },
      {
        "from": [
          "Nordeutscher Lloyd Bremen",
          "Nordeutscher Lloyd, Bremen",
          "Nordeutscher Lloyd - Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Gramercy Park Hotel",
          "Hotel Gramercy Park",
          "Gramercy Park Hotel; Hotel Gramercy Park"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gramercy Park Hotel"
      },
      {
        "from": [
          "Compagnie Générale Transatlantique",
          "Compagnie Generale Transatlantique",
          "Compagnie Générale Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compagnie Générale Transatlantique"
      },
      {
        "from": [
          "Paquebot Liberté\"\"",
          "Paquebot Liberte",
          "Paquebot Liberte\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot Liberté"
      },
      {
        "from": [
          "Hamburg Amerika Linie",
          "Hamburg - Amerika Linie",
          "Hamburg- Amerika Linie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg Amerika Linie"
      },
      {
        "from": [
          "Riggs'",
          "Rigg's",
          "Riggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rigg's"
      },
      {
        "from": [
          "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant",
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant",
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant"
      },
      {
        "from": [
          "Hotel Knickerbocker",
          "Hotel Knickerbocker ",
          "Knickerbocker Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Knickerbocker"
      },
      {
        "from": [
          "U.S.M.S.",
          "Usms",
          "U.S.M.S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S."
      },
      {
        "from": [
          "U.S.M.S. New York",
          "Usms New York",
          "U.S.M.S New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. New York"
      },
      {
        "from": [
          "Delmonicos",
          "Delmonico's",
          "Delmonicos."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's"
      },
      {
        "from": [
          "The Merchant's Club",
          "The Merchants Club",
          "The Merchants' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club"
      },
      {
        "from": [
          "Merchants' Club",
          "Merchant's Club",
          "Merchants Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club"
      },
      {
        "from": [
          "St. Denis Hotel",
          "Hotel St. Denis",
          "St, Denis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "Imperial Hotel",
          "Hotel Imperial",
          "Impérial Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial Hotel"
      },
      {
        "from": [
          "Grand Hotel Royal",
          "Grand Hôtel Royal",
          "Royal Grand Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel Royal"
      },
      {
        "from": [
          "American Medical Editors' Association",
          "American Medical Editor's Association",
          "American Medical Editors Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Medical Editors' Association"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Kobe Maru",
          "Nippon Yusen Kaisha -s.S.Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Kobe Maru"
      },
      {
        "from": [
          "Hotel Metropole",
          "Metropole Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Metropole"
      },
      {
        "from": [
          "S.S. American Shipper",
          "S.S. \"american Shipper\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. American Shipper"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Kasuga",
          "Nippon Yusen Kaisha -s.S.Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Kasuga"
      },
      {
        "from": [
          "Oceanic Steamship Company - Sonoma",
          "Oceanic Steamship Company _ Sonoma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Company - Sonoma"
      },
      {
        "from": [
          "The Merchant's Club Of Chicago",
          "The Merchants Club Of Chicago"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club Of Chicago"
      },
      {
        "from": [
          "Alta Vista Hotel",
          "Alta Vista Hotel "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alta Vista Hotel"
      },
      {
        "from": [
          "Friendly Sons Of St. Patrick",
          "Friendly Sons Of St Patrick"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Friendly Sons Of St. Patrick"
      },
      {
        "from": [
          "Hotel Europäischer Hof",
          "Hotel Europaischer Hof"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Europäischer Hof"
      },
      {
        "from": [
          "Cie Gle Transatlantique",
          "Cie. Gle. Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cie Gle Transatlantique"
      },
      {
        "from": [
          "De L'ange Hotel",
          "Hotel De L'ange"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "De L'ange Hotel"
      },
      {
        "from": [
          "Rigg's Twentieth Street Restaurant",
          "Riggs' Twentieth Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rigg's Twentieth Street Restaurant"
      },
      {
        "from": [
          "Ancient And Honorable Artillery Co Of Massachusetts",
          "Ancient And Honorable Artillery Co. Of Massachusetts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ancient And Honorable Artillery Co Of Massachusetts"
      },
      {
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard Hotel"
      },
      {
        "from": [
          "Oceanic Steamship Co. - Sierra",
          "Oceanic Steamship Co.- Sierra"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Co. - Sierra"
      },
      {
        "from": [
          "St. Francis Hotel",
          "Hotel St. Francis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Francis Hotel"
      },
      {
        "from": [
          "Society Of Colonial Wars In The State Of New York",
          "Society Of The Society Of Colonial Wars In The State Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Society Of Colonial Wars In The State Of New York"
      },
      {
        "from": [
          "Muhlenkamper Fahrhaus",
          "Mühlenkamper Fährhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Muhlenkamper Fahrhaus"
      },
      {
        "from": [
          "Childs' Lunch Rooms",
          "Child's Lunch Rooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Childs' Lunch Rooms"
      },
      {
        "from": [
          "Oceanic Steamship Co. - S.S.Zealandia",
          "Oceanic Steamship Co. S.S.Zealandia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Co. - S.S.Zealandia"
      },
      {
        "from": [
          "Engineers Club",
          "Engineers' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Engineers Club"
      },
      {
        "from": [
          "Hotel Manhattan",
          "Manhattan Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan"
      },
      {
        "from": [
          "Hotel Victory",
          "Victory Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Victory"
      },
      {
        "from": [
          " Club",
          "Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Club"
      },
      {
        "from": [
          "Hotel Grunewald",
          "Grunewald Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Grunewald"
      },
      {
        "from": [
          "Hotel Algazar",
          "Algazar Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Algazar"
      },
      {
        "from": [
          "Fairmont Hotel",
          "Hotel Fairmont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fairmont Hotel"
      },
      {
        "from": [
          "Alcazar Hotel",
          "Hotel Alcazar"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alcazar Hotel"
      },
      {
        "from": [
          "Cafe Savarin",
          "Café Savarin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Savarin"
      },
      {
        "from": [
          "St. Nicholas Hotel",
          "Hotel St. Nicholas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Nicholas Hotel"
      },
      {
        "from": [
          "Hotel Colorado",
          "Colorado Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Colorado"
      },
      {
        "from": [
          "Cosmopolitan Hotel",
          "Cosmopolitan... Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cosmopolitan Hotel"
      },
      {
        "from": [
          "Colombo Hotel",
          "Hotel Colombo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colombo Hotel"
      },
      {
        "from": [
          "Palace Hotel",
          "Palace Hôtel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel"
      },
      {
        "from": [
          "Ancient Accepted Scottish Rite",
          "Ancient & Accepted Scottish Rite"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ancient Accepted Scottish Rite"
      },
      {
        "from": [
          "La Crépe",
          "La Crêpe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "La Crépe"
      },
      {
        "from": [
          "Oceanic Steamship Company -s.S.Zealander",
          "Oceanic Steamship Company - S.S.Zealander"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Company - S.S.Zealander"
      },
      {
        "from": [
          "Pirate's House",
          "Pirates' House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pirate's House"
      },
      {
        "from": [
          "Michigan Society Of The Sons Of The American Revolution",
          "Michigan Society Sons Of The American Revolution"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Michigan Society Sons Of The American Revolution"
      },
      {
        "from": [
          "Merchant's Club Of Boston",
          "Merchants' Club Of Boston"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Merchant's Club Of Boston"
      },
      {
        "from": [
          "Second Panel Sheriff's Jury",
          "Sheriff's Jury Second Panel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Second Panel Sheriff's Jury"
      },
      {
        "from": [
          "Elks Club House",
          "Elks' Club House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Elks Club House"
      },
      {
        "from": [
          "Hotel Du Musee",
          "Hotel Du Musee'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Du Musee"
      },
      {
        "from": [
          "Red Star Line - S.S.Westernland",
          "Red Star Line S.S.Westernland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line - S.S.Westernland"
      },
      {
        "from": [
          "Tavern On The Green",
          "The Tavern On The Green"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tavern On The Green"
      },
      {
        "from": [
          "Hotel Minot",
          "Minot Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Minot"
      },
      {
        "from": [
          "Restaurant Andor Location Not Given.",
          "Restaurant Andor Location Not Given"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Andor Location Not Given."
      },
      {
        "from": [
          "S.S New Amsterdam",
          "S.S. New Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S New Amsterdam"
      },
      {
        "from": [
          "Sherry's",
          "Sherrys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherry's"
      },
      {
        "from": [
          "Ambassador Hotel",
          "Hotel Ambassador"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ambassador Hotel"
      },
      {
        "from": [
          "Bristol Hotel",
          "Hotel Bristol"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bristol Hotel"
      },
      {
        "from": [
          "Schwarzwalder's Natur Weinhaus",
          "Schwarzwalders Natur Weinhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schwarzwalder's Natur Weinhaus"
      },
      {
        "from": [
          "The Commodore Hotel",
          "The Hotel Commodore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Commodore Hotel"
      },
      {
        "from": [
          "Algonquin Hotel",
          "Hotel Algonquin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Algonquin Hotel"
      },
      {
        "from": [
          "Hotel Worthy",
          "Worthy Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Worthy"
      },
      {
        "from": [
          "Hotel Majestic",
          "Majestic Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Majestic"
      },
      {
        "from": [
          "Willard's Hotel",
          "Willards Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Willard's Hotel"
      },
      {
        "from": [
          "Grand Ballroom Of The Hotel Plaza",
          "The Grand Ballroom Of The Hotel Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Ballroom Of The Hotel Plaza"
      },
      {
        "from": [
          "Canadian Pacific Railway Co. - S.S.Athabasca",
          "Canadian Pacific Railway Co.- S.S.Athabasca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Pacific Railway Co. - S.S.Athabasca"
      },
      {
        "from": [
          "Hotel Astor",
          "Astor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Astor"
      },
      {
        "from": [
          "Hotel Chamberlin",
          "Chamberlin Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Chamberlin"
      },
      {
        "from": [
          "Grocers Hall",
          "Grocers' Hall"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grocers Hall"
      },
      {
        "from": [
          "Continental Hotel",
          "Hotel Continental"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Continental Hotel"
      },
      {
        "from": [
          "Colonial Hotel",
          "Hotel Colonial"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colonial Hotel"
      },
      {
        "from": [
          "Wisconsin Society - Sons Of The American Revolution",
          "Wisconsin Society Sons Of The American Revolution"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wisconsin Society - Sons Of The American Revolution"
      },
      {
        "from": [
          "Red Star Line",
          "Red Star Line -"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line"
      },
      {
        "from": [
          "St. Regis Hotel",
          "Hotel St. Regis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Regis Hotel"
      },
      {
        "from": [
          "Hotel Netherland",
          "Netherland Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Netherland"
      },
      {
        "from": [
          "St.Regis Hotel",
          "Hotel St.Regis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Regis Hotel"
      },
      {
        "from": [
          "St. Charles Hotel",
          "St Charles Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel"
      },
      {
        "from": [
          "Society Of Sons Of The Revolution In The State Of Missouri",
          "Society Sons Of The Revolution In The State Of Missouri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Society Of Sons Of The Revolution In The State Of Missouri"
      },
      {
        "from": [
          "Waldorf Astoria",
          "Waldorf- Astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Astoria"
      },
      {
        "from": [
          "Hotel Empire",
          "Empire Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Empire"
      },
      {
        "from": [
          "Reuben's",
          "Reuben's."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reuben's"
      },
      {
        "from": [
          "Paquebot France\"\"",
          "Paquebot France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot France"
      },
      {
        "from": [
          "Royal Palm Hotel",
          "Hotel Royal Palm"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Royal Palm Hotel"
      },
      {
        "from": [
          "George Washington Hotel",
          "Hotel George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "George Washington Hotel"
      },
      {
        "from": [
          "R.G.",
          "Rg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.G."
      },
      {
        "from": [
          "Columbia Hotel",
          "Hotel Columbia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Columbia Hotel"
      },
      {
        "from": [
          "R.M.S. Oceanic",
          "Rms Oceanic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Oceanic"
      },
      {
        "from": [
          "New Grand Hotel",
          "Grand New Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Grand Hotel"
      },
      {
        "from": [
          "The Hotel Plaza",
          "The Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Hotel Plaza"
      },
      {
        "from": [
          "Cafe De Paris",
          "Café De Paris"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe De Paris"
      },
      {
        "from": [
          "Xiii Club",
          "Club Xiii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Xiii Club"
      },
      {
        "from": [
          "Hotel Lafayette",
          "Lafayette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Lafayette"
      },
      {
        "from": [
          "Empire State Society Of Sons Of The American Revolution",
          "Empire State Society Sons Of The American Revolution"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Empire State Society Of Sons Of The American Revolution"
      },
      {
        "from": [
          "Lüchow's Restaurant",
          "Luchow's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lüchow's Restaurant"
      },
      {
        "from": [
          "Hotel Pennsylvania",
          "Pennsylvania Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pennsylvania"
      },
      {
        "from": [
          "Hotel Savoy",
          "Savoy Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy"
      },
      {
        "from": [
          "Hotel Dennis",
          "Dennis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Dennis"
      },
      {
        "from": [
          "R.M.S. Parthia",
          "R.M.S. \"parthia\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Parthia"
      },
      {
        "from": [
          "Café Lafayette",
          "Cafe Lafayette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café Lafayette"
      },
      {
        "from": [
          "Mouquin Restaurant And Wine Co",
          "Mouquin Restaurant And Wine Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mouquin Restaurant And Wine Co"
      },
      {
        "from": [
          "Imperial",
          "Imperial "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial"
      },
      {
        "from": [
          "S.S. Minnetonka",
          "S.S. \"minnetonka\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Minnetonka"
      },
      {
        "from": [
          "Hotel Commodore",
          "Commodore Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Commodore"
      },
      {
        "from": [
          "Usms St Louis",
          "U.S.M.S. St. Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. St. Louis"
      },
      {
        "from": [
          "Hotel Winthrop",
          "Winthrop Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Winthrop"
      },
      {
        "from": [
          "Meyer's Hotel",
          "Meyers Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Meyer's Hotel"
      },
      {
        "from": [
          "Hotel Phonix",
          "Phonix Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Phonix"
      },
      {
        "from": [
          "Hotel Jefferson",
          "Jefferson Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Jefferson"
      },
      {
        "from": [
          "Smith & Mcnell's",
          "Smith & Mcnells"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mcnell's"
      },
      {
        "from": [
          "Hotel D'angleterre",
          "D'angleterre Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel D'angleterre"
      },
      {
        "from": [
          "R.M.S. \"queen Mary\"\"\"",
          "R.M.S. Queen Mary\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Queen Mary"
      },
      {
        "from": [
          "Hotel Claremont",
          "Claremont Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Claremont"
      },
      {
        "from": [
          "Hotel Del Coronado",
          "Del Coronado Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Del Coronado"
      },
      {
        "from": [
          "Cafe Boulevard",
          "Café Boulevard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Boulevard"
      },
      {
        "from": [
          "Hotel Champlain",
          "Champlain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Champlain"
      },
      {
        "from": [
          "R.M.S. Mauretania\"\"",
          "R.M.S. Mauretania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Mauretania"
      },
      {
        "from": [
          "Met-life Building",
          "Metlife Building"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metlife Building"
      },
      {
        "from": [
          "S.S. \"frederik Viii\"",
          "S.S. Frederik Viii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Frederik Viii"
      },
      {
        "from": [
          "Ballroom, The Plaza",
          "The Plaza Ballroom"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ballroom, The Plaza"
      },
      {
        "from": [
          "Menzies Hotel",
          "Menzie's Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Menzies Hotel"
      },
      {
        "from": [
          "American Bankers Association",
          "American Bankers' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Bankers Association"
      },
      {
        "from": [
          "Brevoort Restaurant",
          "Restaurant Brevoort"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brevoort Restaurant"
      },
      {
        "from": [
          "Promenade Café",
          "Cafe Promenade"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Promenade Café"
      },
      {
        "from": [
          "Oceanic Steamship Company - Sierra",
          "Oceanic Steamship Company -sierra"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Company - Sierra"
      },
      {
        "from": [
          "S.S. \"ile De France\"\"\"",
          "S.S. Ile De France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Ile De France"
      },
      {
        "from": [
          "Master Printers Association",
          "Master Printers' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Master Printers Association"
      },
      {
        "from": [
          "Wärdshuset Stallmästaregarden",
          "Wärdshuset Stallmästaregården"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wärdshuset Stallmästaregarden"
      },
      {
        "from": [
          "Restaurant Mayan",
          "Mayan Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Mayan"
      },
      {
        "from": [
          "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota",
          "Military Order Of The Loyal Legion Of The United States. Commandery Of The State Of Minnesota"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Military Order Of The Loyal Legion Of The United States. Commandery Of The State Of Minnesota"
      },
      {
        "from": [
          "Adams' Restaurant",
          "Adam's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adams' Restaurant"
      },
      {
        "from": [
          "New England Society In The City Of New York",
          "The New England Society In The City Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Society In The City Of New York"
      },
      {
        "from": [
          "Grenoble Hotel",
          "Hotel Grenoble"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grenoble Hotel"
      },
      {
        "from": [
          "The Manor\"\"",
          "The Manor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Manor"
      },
      {
        "from": [
          "Penn. Rr - Pullman Dining Car Service",
          "Penn Rr - Pullman Dining Car Service"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Penn. Rr - Pullman Dining Car Service"
      },
      {
        "from": [
          "Santa Fe Route",
          "Santa Fe' Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Santa Fe Route"
      },
      {
        "from": [
          "Alpha Kappa Kappa",
          "Kappa Alpha"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Kappa Alpha"
      },
      {
        "from": [
          "Windsor Hotel",
          "Hotel Windsor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Windsor Hotel"
      },
      {
        "from": [
          "Toyo Kisen Kaisha - Hong Kong Maru",
          "Toyo Kisen Kaisha -hong Kong Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Toyo Kisen Kaisha - Hong Kong Maru"
      },
      {
        "from": [
          "Hotel National",
          "National Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel National"
      },
      {
        "from": [
          "Hotel Marie Antoinette",
          "Marie Antoinette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Marie Antoinette"
      },
      {
        "from": [
          "Hotel Quisisana",
          "Quisisana Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Quisisana"
      },
      {
        "from": [
          "New York Central System, Boston & Albany Railroad",
          "Boston & Albany Railroad , New York Central System"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central System, Boston & Albany Railroad"
      },
      {
        "from": [
          "Copley Plaza Hotel",
          "Hotel Copley Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza Hotel"
      },
      {
        "from": [
          "Old Guard Albany Zouave Cadets",
          "Albany Zouave Cadets - Old Guard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Old Guard Albany Zouave Cadets"
      },
      {
        "from": [
          "New York Central & Hudson River R.R.",
          "New York Central & Hudson River R.R.."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central & Hudson River R.R."
      },
      {
        "from": [
          "St. George's Society",
          "St. Georges Society"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George's Society"
      },
      {
        "from": [
          "San Remo Hotel",
          "Hotel San Remo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Remo Hotel"
      },
      {
        "from": [
          "Shanley's",
          "Shanleys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shanley's"
      },
      {
        "from": [
          "Le Dome Of The Four Seasons",
          "Le Dôme Of The Four Seasons"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Dome Of The Four Seasons"
      },
      {
        "from": [
          "Bankers' Club Of Chicago",
          "Bankers Club Of Chicago"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bankers' Club Of Chicago"
      },
      {
        "from": [
          "Fraunces' Tavern",
          "Fraunces Tavern"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fraunces' Tavern"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Nasuga",
          "Nippon Yusen Kaisha -s.S.Nasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Nasuga"
      },
      {
        "from": [
          "Cafeteria Lunch",
          "Cafeteria - Lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafeteria Lunch"
      },
      {
        "from": [
          "Hotel St. George",
          "St. George Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. George"
      },
      {
        "from": [
          "Le Café Chambord",
          "Le Cafe Chambord"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Café Chambord"
      },
      {
        "from": [
          "Oceanic Steamship Co. - Sonoma",
          "Oceanic Steamship Co. _ Sonoma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Co. - Sonoma"
      },
      {
        "from": [
          "Associated Pioneers Of The Territorial Days Of California",
          "The Associated Pioneers Of The Territorial Days Of California"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Associated Pioneers Of The Territorial Days Of California"
      },
      {
        "from": [
          "Hotel Plaza",
          "Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Plaza"
      },
      {
        "from": [
          "York Hotel",
          "Hotel York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "York Hotel"
      },
      {
        "from": [
          "Hotel Royal",
          "Royal Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Royal"
      },
      {
        "from": [
          "Hotel Vendome",
          "Vendome Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome"
      },
      {
        "from": [
          "Cie Transatlantique",
          "Cie Cie Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cie Transatlantique"
      },
      {
        "from": [
          "Us Army - Subsistence Dept.",
          "U.S. Army - Subsistence Dept."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S. Army - Subsistence Dept."
      },
      {
        "from": [
          "Hotel Martinique",
          "Martinique Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Martinique"
      },
      {
        "from": [
          "Hotel New Weston",
          "New Weston Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel New Weston"
      },
      {
        "from": [
          "Copley-plaza Hotel",
          "Hotel Copley-plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley-plaza Hotel"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Kinshin Maru",
          "Nippon Yusen Kaisha -s.S.Kinshin Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Kinshin Maru"
      },
      {
        "from": [
          "Hotel Victoria",
          "Victoria Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Victoria"
      },
      {
        "from": [
          "Ponce De Leon Hotel",
          "Hotel Ponce De Leon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ponce De Leon Hotel"
      },
      {
        "from": [
          "Hotel Pontchartrain",
          "Pontchartrain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pontchartrain"
      },
      {
        "from": [
          "Hotel Lexington",
          "Lexington Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Lexington"
      },
      {
        "from": [
          "Hotel Revelstoke",
          "Revelstoke Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Revelstoke"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S. Kasuga",
          "Nippon Yusen Kaisha -ss Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S. Kasuga"
      },
      {
        "from": [
          "Hotel Roanoke",
          "Roanoke Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Roanoke"
      },
      {
        "from": [
          "Des Indes Hotel",
          "Hotel Des Indes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Des Indes Hotel"
      },
      {
        "from": [
          "Baltimore Hotel",
          "Hotel Baltimore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baltimore Hotel"
      },
      {
        "from": [
          "Westminster Hotel",
          "Hotel Westminster"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Westminster Hotel"
      },
      {
        "from": [
          "Hotel Statler",
          "Statler Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Statler"
      },
      {
        "from": [
          "Profile House And Hotel Vendome",
          "Hotel Vendome And Profile House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Profile House And Hotel Vendome"
      },
      {
        "from": [
          "U.S.S. New York",
          "U.S.S. New York "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. New York"
      },
      {
        "from": [
          "Gallatin Hotel",
          "Hotel Gallatin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gallatin Hotel"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbräu Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "New England Shorthand Reporter's Association",
          "New England Shorthand Reporters' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Shorthand Reporter's Association"
      }
    ],
    "description": "Mass edit cells in column sponsor_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Red Star Line - S.S.Friesland",
          "Red Star Line Ss Friesland",
          "Red Star Line-ss Friesland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line - S.S.Friesland"
      },
      {
        "from": [
          "U.S.S. Raleigh",
          "U.S.S.Raleigh",
          "U.S.S.S.Raleigh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. Raleigh"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbrauhaus",
          "Hof Brau Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Kobe Maru",
          "Nippon Yusen Kaisha - S.S. Kobe Maru",
          "Nipppon Yusen Kaisha - S.S. Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Kobe Maru"
      },
      {
        "from": [
          "Societa La Piemontese",
          "Societa'la Piemontese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Societa La Piemontese"
      },
      {
        "from": [
          "Hotel Dupont",
          "Hotel Du Pont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Dupont"
      },
      {
        "from": [
          "A.H. Meyer Rathskeller",
          "A.H.Meyer Rathskeller"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.H. Meyer Rathskeller"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Kasuga",
          "Nippon Yusen Kaisha - S.S. Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Kasuga"
      },
      {
        "from": [
          "Laurel In The Pines",
          "Laurel-in-the-pines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Laurel In The Pines"
      },
      {
        "from": [
          "S. S. President Wilson",
          "S.S. President Wilson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S. S. President Wilson"
      },
      {
        "from": [
          "Bellevue - Stratford",
          "Bellevue-stratford"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue - Stratford"
      },
      {
        "from": [
          "United Air Lines",
          "United Airlines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "United Airlines"
      },
      {
        "from": [
          "Cafeteria Lunch",
          "Cafeteria-lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafeteria Lunch"
      },
      {
        "from": [
          "Copley Plaza",
          "Copley-plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza"
      },
      {
        "from": [
          "Cie Gle Transatlantique",
          "Cie.Gle. Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cie Gle Transatlantique"
      },
      {
        "from": [
          "Bellevue Stratford Hotel",
          "Bellevue-stratford Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue Stratford Hotel"
      },
      {
        "from": [
          "Bundeshaus Restaurant",
          "Bundeshausrestaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bundeshaus Restaurant"
      },
      {
        "from": [
          "British Schools And Universities Club Of New York",
          "Britishschools And Universities Club Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "British Schools And Universities Club Of New York"
      },
      {
        "from": [
          "S.S. Amsterdam",
          "S.S.Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Amsterdam"
      },
      {
        "from": [
          "Friendly Sons Of St. Patrick",
          "Friendly Sons Of St.Patrick"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Friendly Sons Of St. Patrick"
      },
      {
        "from": [
          "Canadian Pacific Railway Co. - S.S. Alberta",
          "Canadian Pacific Railway Co. - S.S.Alberta"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Pacific Railway Co. - S.S. Alberta"
      },
      {
        "from": [
          "Cunard Line-r.M.S. Pavonia",
          "Cunard Line R.M.S. Pavonia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cunard Line R.M.S. Pavonia"
      },
      {
        "from": [
          "Red Star Line - S.S. Southwark",
          "Red Star Line - S.S.Southwark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line - S.S. Southwark"
      },
      {
        "from": [
          "U.S.S. San Francisco",
          "U.S.S.San Francisco"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. San Francisco"
      },
      {
        "from": [
          "The Round Table",
          "The Roundtable"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Round Table"
      },
      {
        "from": [
          "St. George's Society Of New York",
          "St.George's Society Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George's Society Of New York"
      },
      {
        "from": [
          "Menzies Hotel",
          "Menzies'hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Menzies Hotel"
      },
      {
        "from": [
          "New York State Hotel Association",
          "New-york State Hotel Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York State Hotel Association"
      },
      {
        "from": [
          "Business Men's League Of St. Louis",
          "Business Men's League Of St.Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Business Men's League Of St. Louis"
      },
      {
        "from": [
          "Pig N'whistle",
          "Pig'n Whistle"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pig N'whistle"
      },
      {
        "from": [
          "St. Regis Hotel",
          "St.Regis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Regis Hotel"
      },
      {
        "from": [
          "Red Star Line - Antwerpen -new York",
          "Red Star Line Antwerpen-new York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line - Antwerpen -new York"
      },
      {
        "from": [
          "U. S. S. Wyoming",
          "U.S.S. Wyoming"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U. S. S. Wyoming"
      },
      {
        "from": [
          "The Southern Berkshire Society Of New York",
          "Southern Berkshire Society Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Southern Berkshire Society Of New York"
      },
      {
        "from": [
          "Hamburg-amerika Linie",
          "Hamburg Amerika Linie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg-amerika Linie"
      },
      {
        "from": [
          "Roger's Restaurant",
          "Rogers'restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roger's Restaurant"
      },
      {
        "from": [
          "Red Star Line - S.S.Westernland",
          "Red Star Line - Ss Westernland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line - S.S.Westernland"
      },
      {
        "from": [
          "O.D.",
          "O. D."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "O.D."
      },
      {
        "from": [
          "B&o Blue Line",
          "B.& O. Blue Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "B.& O. Blue Line"
      },
      {
        "from": [
          "St. Andrew's Society Of The State Of New York",
          "St.Andrews Society Of The State Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Andrew's Society Of The State Of New York"
      },
      {
        "from": [
          "Canadian Pacific Railway Co. - S.S. Athabasca",
          "Canadian Pacific Railway Co. - S.S.Athabasca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Pacific Railway Co. - S.S. Athabasca"
      },
      {
        "from": [
          "Hotel La Salle",
          "Hotel Lasalle"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel La Salle"
      },
      {
        "from": [
          "St. Francis Hotel",
          "St.Francis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Francis Hotel"
      },
      {
        "from": [
          "The Waldorf Astoria",
          "The Waldorf-astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf Astoria"
      },
      {
        "from": [
          "Smith & Mcnell's",
          "Smith & Mc Nells"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mcnell's"
      },
      {
        "from": [
          "Hotel Mcalpin",
          "Hotel Mc Alpin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Mcalpin"
      },
      {
        "from": [
          "Siegel Cooper Co.",
          "Siegel-cooper Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Siegel Cooper Co."
      },
      {
        "from": [
          "Copley-plaza Hotel",
          "Copley Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley-plaza Hotel"
      },
      {
        "from": [
          "Simpson's In The Strand",
          "Simpson's-in-the-strand"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Simpson's In The Strand"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Nasuga",
          "Nippon Yusen Kaisha - S.S. Nasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Nasuga"
      },
      {
        "from": [
          "Tyn-y-coed",
          "Tyny Coed"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tyn-y-coed"
      },
      {
        "from": [
          "U. S. S. New York",
          "U.S.S. New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. New York"
      },
      {
        "from": [
          "U. S. S. Florida",
          "U.S.S. Florida"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. Florida"
      },
      {
        "from": [
          "S.S. America",
          "S.S.America"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. America"
      },
      {
        "from": [
          "Flat Iron Restaurant & Cafe",
          "Flatiron Restaurant & Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flatiron Restaurant & Cafe"
      },
      {
        "from": [
          "U.S.M.S.Philadelphia",
          "Usms Philadelphia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S.Philadelphia"
      },
      {
        "from": [
          "Dinner Menu, S. S. Vaderland, March 18th, 1910.",
          "Dinner Menu, S.S. Vaderland, March 18th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "Ritz Carlton Hotel",
          "Ritz-carlton Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton Hotel"
      },
      {
        "from": [
          "Waldorf Astoria",
          "Waldorf-astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Astoria"
      },
      {
        "from": [
          "The Cobble Stones",
          "The Cobblestones"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cobble Stones"
      },
      {
        "from": [
          "S.S. United States",
          "S. S. United States"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. United States"
      },
      {
        "from": [
          "Ritz Carlton",
          "Ritz-carlton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton"
      },
      {
        "from": [
          "St.Louis Club",
          "St. Louis Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Louis Club"
      },
      {
        "from": [
          "Flat Iron Restaurant",
          "Flatiron Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Restaurant"
      },
      {
        "from": [
          "Down Town Club",
          "Downtown Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Down Town Club"
      },
      {
        "from": [
          "Red Star Line -antwerpen - Ny",
          "Red Star Line - Antwerpen.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line -antwerpen - Ny"
      },
      {
        "from": [
          "R.M.S. Oceanic",
          "R.M.S.Oceanic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Oceanic"
      },
      {
        "from": [
          "Cunard Steam Ship Company Limited",
          "Cunard Steamship Company Limited"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cunard Steam Ship Company Limited"
      },
      {
        "from": [
          "Smith & Mc Nell",
          "Smith & Mcnell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mc Nell"
      },
      {
        "from": [
          "Chicago Stationers Association",
          "Chicagos Stationers Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago Stationers Association"
      },
      {
        "from": [
          "A.W. Dennett",
          "A.W.Dennett"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.W. Dennett"
      },
      {
        "from": [
          "Café Des Beaux Arts",
          "Café Des Beaux-arts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café Des Beaux Arts"
      }
    ],
    "description": "Mass edit cells in column sponsor_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Flat Iron Resaurant And Cafe",
          "Flatiron Resaurant And Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Resaurant And Cafe"
      },
      {
        "from": [
          "Provinzial Liedertafel",
          "Provinzial-liedertafel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Provinzial Liedertafel"
      }
    ],
    "description": "Mass edit cells in column sponsor_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscherrr Lloyd Bremen",
          "Norddeutscher Lloyd Breman",
          "Nordeuscher Lloyd Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Hamburg-amerika Linie",
          "Hamburg-america Linie",
          "Hamburg-amerika Line",
          "Hamburg-america Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg-amerika Linie"
      },
      {
        "from": [
          "Oceanic Steamship Co.",
          "Ocean Steamship Co.",
          "Ocean Steamshop Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Co."
      },
      {
        "from": [
          "S.S. Nieuw Amsterdam",
          "S.S New Amsterdam",
          "S.S. Niew Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Nieuw Amsterdam"
      },
      {
        "from": [
          "Red Star Line -antwerpen - Ny",
          "Red Star Line Antwerpen",
          "Red Ster Line - Antwerpen - Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line -antwerpen - Ny"
      },
      {
        "from": [
          "U.S.A.Army Transport Warren",
          "U.S.Army Transport Warren"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.A.Army Transport Warren"
      },
      {
        "from": [
          "Sphinx Club",
          "Sphnx Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sphinx Club"
      },
      {
        "from": [
          "Norddeutscher Lloyd",
          "Nordeutscher Lloyd"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd"
      },
      {
        "from": [
          "Supper Menu, S. S. Vaderland, March 18th, 1910.",
          "Supper Menu, S. S. Vaderland, March 19th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Supper Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "Boston Merchants Association",
          "Boston Merchants Associationi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston Merchants Association"
      },
      {
        "from": [
          "American Hotel",
          "Americana Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Hotel"
      },
      {
        "from": [
          "National Wholesale Druggists' Association",
          "National Wholesale Druggests' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "National Wholesale Druggists' Association"
      },
      {
        "from": [
          "Compagnie Générale Transatlantique",
          "Compagnie General Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compagnie Générale Transatlantique"
      },
      {
        "from": [
          "Wisconsin Bankers Association",
          "Wisconsin Bankers' Asociation"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wisconsin Bankers Association"
      },
      {
        "from": [
          "Pacific Mail Steamship Company",
          "Pacific Mail Steamshp Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail Steamship Company"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Kobe Maru",
          "Nippon Yusen Kaisha - S.S.Kobi Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Kobe Maru"
      },
      {
        "from": [
          "Hotel Netherland",
          "Hotel Nethrland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Netherland"
      },
      {
        "from": [
          "Ancient And Honorable Artillery Company Of Massachusetts",
          "Ancint And Honorable Artillery Company Of Massachusetts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ancient And Honorable Artillery Company Of Massachusetts"
      },
      {
        "from": [
          "M.F. Loyns Dining Rooms",
          "M.F.Lyons Dining Rooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "M.F. Loyns Dining Rooms"
      },
      {
        "from": [
          "Toyo Kisen Kaisha - Hong Kong Maru",
          "Toyo Kisen Kaisha - Hing Kong Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Toyo Kisen Kaisha - Hong Kong Maru"
      },
      {
        "from": [
          "Gibson's",
          "Gibson House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gibson's"
      },
      {
        "from": [
          "Pschorrbru-bierhallen",
          "Pschorrbräu Bierhallen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pschorrbru-bierhallen"
      },
      {
        "from": [
          "Oyster Bar & Restaurant",
          "Oyster Bay Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oyster Bar & Restaurant"
      },
      {
        "from": [
          "Coffee Shop",
          "Coffe Shop"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee Shop"
      },
      {
        "from": [
          "R.I. Alpha Of Phi Delta Theta",
          "R.J.Alpha Of Phi Delta Theta"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.I. Alpha Of Phi Delta Theta"
      },
      {
        "from": [
          "Girafe",
          "Giraffe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Girafe"
      },
      {
        "from": [
          "Jansen's Restaurant",
          "Janssen's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jansen's Restaurant"
      },
      {
        "from": [
          "The Bellevue-stratford",
          "The Bellvue-stratford"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Bellevue-stratford"
      },
      {
        "from": [
          "Alcazar Hotel",
          "Aalcazar Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alcazar Hotel"
      },
      {
        "from": [
          "Breakfast Menu, S. S. Vaderland, March 18th, 1910.",
          "Breakfast Menu, S. S. Vaderland, March 19th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "Griswold House",
          "Griswald House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Griswold House"
      },
      {
        "from": [
          "Dobbeltskrue Postdampskibet",
          "Dobbelskrue Postdampskibet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dobbeltskrue Postdampskibet"
      },
      {
        "from": [
          "Wiehl & Widmann",
          "Wiehl & Widman"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wiehl & Widmann"
      },
      {
        "from": [
          "Pullman Dining Car Service -the President",
          "Pullman Dining Car Serfvice-the President"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pullman Dining Car Service -the President"
      },
      {
        "from": [
          "Colonnade Restaurant",
          "Colonade Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colonnade Restaurant"
      },
      {
        "from": [
          "Nippon Yusen Kaisha",
          "Nippon Yusen Kaisa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha"
      },
      {
        "from": [
          "Hotel D'angleterre",
          "Hotel D'angeleterre"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel D'angleterre"
      },
      {
        "from": [
          "American Cotton Manufacturers Asociation",
          "American Cotton Manufacturers' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Cotton Manufacturers Asociation"
      },
      {
        "from": [
          "Associated Students Of Carroll Brewster",
          "Associated Students Of F. Carroll Brewster"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Associated Students Of Carroll Brewster"
      },
      {
        "from": [
          "New England Manufacturing Jewelers' And Silversmiths' Association",
          "New England Manufacturing Jewlers' And Silversmiths' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Manufacturing Jewelers' And Silversmiths' Association"
      },
      {
        "from": [
          "Muhlenkamper Fahrhaus",
          "Mühlenkanper Fährhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Muhlenkamper Fahrhaus"
      },
      {
        "from": [
          "King Karl And Queen Olga Of Wurtemberg",
          "King Karl And Queen Olga Of Wurtinberg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Karl And Queen Olga Of Wurtemberg"
      },
      {
        "from": [
          "Manhasset Club",
          "Manhassett Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhasset Club"
      },
      {
        "from": [
          "King Umberto And Queen Margharita",
          "King Umberto And Queen Margherita"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Umberto And Queen Margharita"
      },
      {
        "from": [
          "Louisville & Nashville Railroaad - The Pullman Co.",
          "Louisville & Nashville Railroad - The Pullmana Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Louisville & Nashville Railroaad - The Pullman Co."
      },
      {
        "from": [
          "Confrerie De La Chaine Des Rotisseurs",
          "Confrerie De La Chiane Des Rotisseurs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Confrerie De La Chaine Des Rotisseurs"
      },
      {
        "from": [
          "Metropolitan Club",
          "Metropoliton Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Club"
      },
      {
        "from": [
          "Fisherman's Grotto",
          "Fishermen's Grotto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fisherman's Grotto"
      },
      {
        "from": [
          "Hotel Seiler",
          "Hotels Seiler"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Seiler"
      },
      {
        "from": [
          "Manila",
          "Maynilà"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Maynilà"
      },
      {
        "from": [
          "Santa Maria",
          "Ts Santa Maria\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Santa Maria"
      },
      {
        "from": [
          "Delmonico's",
          "Delmonoco's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's"
      },
      {
        "from": [
          "Hotel Men's Mutual Benefit Aasociation",
          "Hotel Men's Mutual Benefit Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Men's Mutual Benefit Aasociation"
      },
      {
        "from": [
          "Westminster Hotel",
          "Westminister Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Westminster Hotel"
      },
      {
        "from": [
          "Royal Alexandria Hotel",
          "Royal Alexandra Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Royal Alexandria Hotel"
      },
      {
        "from": [
          "Joe's Restaurant",
          "Jeo's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Joe's Restaurant"
      },
      {
        "from": [
          "Schwarzwalder's Natur Weinhaus",
          "Schwarzzwalder's Natur Weinhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schwarzwalder's Natur Weinhaus"
      },
      {
        "from": [
          "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant",
          "Edward F. Langs's Ladies' And Gents Lunch Room And Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant"
      },
      {
        "from": [
          "Hotel Roanoke",
          "Hotel Roanoake"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Roanoke"
      },
      {
        "from": [
          "The Cortland",
          "The Cortlandt"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cortland"
      },
      {
        "from": [
          "Hotel Brevoort",
          "Hotel Breevort"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Brevoort"
      },
      {
        "from": [
          "New England Society Of Pennsylvania",
          "New England Society Of Pennsylvnia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Society Of Pennsylvania"
      },
      {
        "from": [
          "The Lotos Club",
          "The Lotus Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Lotos Club"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen-amerika",
          "Norddeutscher Lloyd--bremen-america"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen-amerika"
      },
      {
        "from": [
          "Gardner & Smith",
          "Gerdner & Smith"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gardner & Smith"
      },
      {
        "from": [
          "Del Coronada Hotel",
          "Del Coronadao Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Del Coronada Hotel"
      },
      {
        "from": [
          "Huether & Steffens",
          "Heuther & Steffens"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Huether & Steffens"
      },
      {
        "from": [
          "Dinner Menu, S. S. Vaderland, March 18th, 1910.",
          "Dinner Menu, S.S. Vaderland, March 19th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "Norddeutcher Lloyd Bremen",
          "Nordeutcher Lloyd, Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutcher Lloyd Bremen"
      },
      {
        "from": [
          "Denvar Bar Association",
          "Denver Bar Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Denvar Bar Association"
      },
      {
        "from": [
          "Young Men's Christian Association",
          "Young Man's Christian Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Young Men's Christian Association"
      },
      {
        "from": [
          "Queen Elizabeth 2",
          "Queen Elizabeth Ii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Queen Elizabeth 2"
      },
      {
        "from": [
          "Royal Poinciana",
          "Royal Ponciana"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Royal Poinciana"
      },
      {
        "from": [
          "Luncheon Menu, S. S. Vaderland, March 18th, 1910.",
          "Luncheon Menu, S. S. Vaderland, March 19th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon Menu, S. S. Vaderland, March 18th, 1910."
      }
    ],
    "description": "Mass edit cells in column sponsor_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "R.M.S. Queen Elizabeth\"\"",
          "R.M.S. Queen Elizabeth 2"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Queen Elizabeth"
      }
    ],
    "description": "Mass edit cells in column sponsor_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutcher Lloyd Bremen",
          "Norddeutecher Lloyd Bremen",
          "Norddeutscher Lloyds Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "King Edward Vii",
          "King Edard Vii",
          "King Endward Vii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Edward Vii"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutcher Lloyd Bremen",
          "Norddeutecher Lloyd Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "American House",
          "American Houe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American House"
      },
      {
        "from": [
          "New England Society In The City Of New York",
          "New England Sciety In The City Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Society In The City Of New York"
      },
      {
        "from": [
          "State Department Special To The Pand-american Congress At The City Of Mexico Pullman Car Service",
          "State Department Special To The Pan-american Congress At The City Of Mexico Pullman Car Service"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "State Department Special To The Pand-american Congress At The City Of Mexico Pullman Car Service"
      },
      {
        "from": [
          "Tadich Grill",
          "Tadlich Grill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tadich Grill"
      },
      {
        "from": [
          "The Cortland",
          "The Portland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cortland"
      },
      {
        "from": [
          "Clifton House",
          "Clinton House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clifton House"
      },
      {
        "from": [
          "La Camelia",
          "Le Camelia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "La Camelia"
      },
      {
        "from": [
          "Twentieth Century Aldermanic Association",
          "Twentieth Century Aldermanir Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Twentieth Century Aldermanic Association"
      },
      {
        "from": [
          "New York Life Insuance Company",
          "New York Life Insurance Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Life Insuance Company"
      },
      {
        "from": [
          "Long Beach Hotel",
          "Lohg Beach Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Long Beach Hotel"
      },
      {
        "from": [
          "Flat Iron Resaurant And Cafe",
          "Flat Iron Restaurant And Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Resaurant And Cafe"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Kasuga",
          "Nippon Yusen Kaisha - S.S.Nasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Kasuga"
      },
      {
        "from": [
          "Greenhut-siegel Cooper Co.",
          "Greehut-siegel Cooper Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Greenhut-siegel Cooper Co."
      },
      {
        "from": [
          "Bermuda Catering Co.",
          "Bermuda Catering Coy."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bermuda Catering Co."
      },
      {
        "from": [
          "Cortland",
          "Cortlandt"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cortland"
      },
      {
        "from": [
          "Oceanic Steamship Company - Sierra",
          "Oceanic Sreamship Company - Sierra"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Company - Sierra"
      },
      {
        "from": [
          "Hotel Walton",
          "Hotel Walson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Walton"
      },
      {
        "from": [
          "Grand Hotel",
          "Grad Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel"
      },
      {
        "from": [
          "America Association Of Public Accountants",
          "American Association Of Public Accountants"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "America Association Of Public Accountants"
      },
      {
        "from": [
          "Palace Hotel Restaurat And Ladies Grill Room",
          "Palace Hotel Restaurant And Ladies Grill Room"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel Restaurat And Ladies Grill Room"
      },
      {
        "from": [
          "Great Northern System - Dining Cars",
          "Great Northern System - Dining Car"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Great Northern System - Dining Cars"
      },
      {
        "from": [
          "Hotel Pontchartrain",
          "Hotel Ponchartrain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pontchartrain"
      },
      {
        "from": [
          "The White Turkeys",
          "The White Turkey"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The White Turkeys"
      },
      {
        "from": [
          "King Edward Vii",
          "King Endward Vii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Edward Vii"
      },
      {
        "from": [
          "Colombo Hotel",
          "Colombi Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colombo Hotel"
      },
      {
        "from": [
          "Americal Chemical Society",
          "American Chemical Society"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Chemical Society"
      },
      {
        "from": [
          "Promenade Café",
          "Promenade Cafés"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Promenade Café"
      },
      {
        "from": [
          "Hotel Savoy",
          "Hotel Saboy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy"
      },
      {
        "from": [
          "Albemarle Hotel",
          "Albermarle Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albemarle Hotel"
      },
      {
        "from": [
          "Childs' Lunch Rooms",
          "Childs' Lunch Room"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Childs' Lunch Rooms"
      },
      {
        "from": [
          "Columbia University Restauant",
          "Columbia University Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Columbia University Restauant"
      },
      {
        "from": [
          "Park Avenue Hotel",
          "Park Avebue Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Avenue Hotel"
      },
      {
        "from": [
          "Holland-america Line",
          "Holland-american Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Holland-america Line"
      },
      {
        "from": [
          "Cigar Leaf Tobacco Board Of Trade Of The United States",
          "Jcigar Leaf Tobacco Board Of Trade Of The United States"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cigar Leaf Tobacco Board Of Trade Of The United States"
      },
      {
        "from": [
          "Pennsylvania Railroad Dining Cars",
          "Pennsylvania Railroad Dining Car"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pennsylvania Railroad Dining Cars"
      },
      {
        "from": [
          "New York Southern Society",
          "New York Southen Society"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Southern Society"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyds Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Great Northern Railway",
          "Great Norther Railway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Great Northern Railway"
      },
      {
        "from": [
          "King Edward Vii",
          "King Edard Vii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Edward Vii"
      },
      {
        "from": [
          "Riggs House",
          "Briggs House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Riggs House"
      },
      {
        "from": [
          "Henri Iv Restaurant",
          "Henri Iv Restaurants"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Henri Iv Restaurant"
      },
      {
        "from": [
          "Commercial Club Of Cincinnati",
          "C0mmercial Club Of Cincinnati"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial Club Of Cincinnati"
      },
      {
        "from": [
          "Sheraton Hotel",
          "Sheraton Hotels"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sheraton Hotel"
      },
      {
        "from": [
          "Clover Club Of Boston",
          "Cover Club Of Boston"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clover Club Of Boston"
      },
      {
        "from": [
          "Nippon Yusen Kaisha",
          "Nippon Pusen Kaisha"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha"
      },
      {
        "from": [
          "Aldine Club Rooms",
          "Aldine Club Rooma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aldine Club Rooms"
      },
      {
        "from": [
          "Cercle Francaid De L'harmonie",
          "Cercle Francais De L'harmonie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cercle Francaid De L'harmonie"
      },
      {
        "from": [
          "The Waldorf Astoria",
          "The Walforf Astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf Astoria"
      },
      {
        "from": [
          "Palace Hotel Restaurant",
          "Palace Hotel Restaurat"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel Restaurant"
      },
      {
        "from": [
          "First Panel Sheriff's Jury",
          "First Panel Sherfiff's Jury"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "First Panel Sheriff's Jury"
      },
      {
        "from": [
          "Restaurant Name Andor Location Not Given",
          "Restaurtant Name Andor Location Not Given"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Name Andor Location Not Given"
      },
      {
        "from": [
          "Poland Spring House",
          "Poland Springs House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Poland Spring House"
      },
      {
        "from": [
          "Mayflower Hotel",
          "Mayflower Hotels"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mayflower Hotel"
      },
      {
        "from": [
          "Trustees Of The Missouri Botanical Garden",
          "Trustees Of The Missoui Botanical Garden"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Trustees Of The Missouri Botanical Garden"
      },
      {
        "from": [
          "Aldine Club",
          "Alpine Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aldine Club"
      },
      {
        "from": [
          "Ports O' Call",
          "Ports Of Call"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ports O' Call"
      }
    ],
    "description": "Mass edit cells in column sponsor_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Mass Society Of The Sons Of The American Revolution",
          "Massachusetts Society Of The Sons Of The American Revolution",
          "Oregon Society Of The Sons Of The American Revolution"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Massachusetts Society Of The Sons Of The American Revolution"
      },
      {
        "from": [
          "Ancient And Honorable Artillery Company Of Massachusetts",
          "Ancient & Honorable Artillery Company Of Massachusetts",
          "Ancient & Honorable Artillery Company Of Mass."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ancient And Honorable Artillery Company Of Massachusetts"
      },
      {
        "from": [
          "New Falmouth Hotel",
          "Falmouth Hotel",
          "The New Falmouth Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Falmouth Hotel"
      },
      {
        "from": [
          "Waldorf Astoria",
          "The Waldorf Astoria",
          "The Waldorf Astoria Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Astoria"
      },
      {
        "from": [
          "Fraterbak Union Of Anointed High Priests Of The State Of New York",
          "Fraternal Union Of Annionted High Priests Of New York State",
          "Fraternal Union Of Anointed High Priests Of The State Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fraterbak Union Of Anointed High Priests Of The State Of New York"
      },
      {
        "from": [
          "Business Men's League Of St. Louis",
          "The Business Men's League Of Saint Louis",
          "The Business Men's League Of St. Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Business Men's League Of St. Louis"
      },
      {
        "from": [
          "St. George's Society Of New York",
          "St. George's Society Of The City Of New York",
          "St. George's Society Of The City Of Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George's Society Of New York"
      },
      {
        "from": [
          "Union League Club",
          "The Union League Club",
          "The Union League Club House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League Club"
      },
      {
        "from": [
          "C. F. Tietgen Dobbeltskrue Postdampskibet",
          "Dobbeltskrue Postdampskibet C.F. Tietgen",
          "Dobbeltskrue Postdamskibet C.F.Tietgen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "C. F. Tietgen Dobbeltskrue Postdampskibet"
      },
      {
        "from": [
          "Saint David's Society Of The State Of New York",
          "St. David's Society Of The State Of New York",
          "St. David's Society Of The State Of Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saint David's Society Of The State Of New York"
      },
      {
        "from": [
          "Oceanic Steamship Co. - S.S.Zealandia",
          "Oceanic Steamship Company - S.S.Zealander",
          "Oceanic Steamship Company - S.S. Zealandia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Co. - S.S.Zealandia"
      },
      {
        "from": [
          "Nippon Yusen Kaisha - S.S.Kobe Maru",
          "Nippon Yusen Kaisha - S.S. Kobe Fiaru",
          "Nippon Yusen Kaisha - S.S.Kobe Liaru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha - S.S.Kobe Maru"
      },
      {
        "from": [
          "The Ballroom Of The Hotel Plaza",
          "Grand Ballroom Of The Hotel Plaza",
          "The Ballroom At Hotel Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Ballroom Of The Hotel Plaza"
      },
      {
        "from": [
          "Delmonico's",
          "Delmonico",
          "Le Delmonico"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's"
      },
      {
        "from": [
          "Pacific Mail Steamship Company",
          "Pacific Mail Steamship Co.",
          "Mail Steamship Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail Steamship Company"
      },
      {
        "from": [
          "New Haven Railroad",
          "The New Haven Railroad",
          "The New Haven R. R. Railroad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Haven Railroad"
      },
      {
        "from": [
          "The New Willard Hotel",
          "New Willard Hotel",
          "The Willard Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard Hotel"
      },
      {
        "from": [
          "Occidental & Oriental Steamship Company",
          "Occidental & Oriental Steamship Co.",
          "Occidental And Oriental Steamship Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Occidental & Oriental Steamship Company"
      },
      {
        "from": [
          "Cie Gle Transatlantique",
          "Cie Transatlantique",
          "Cie Gle Translantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cie Gle Transatlantique"
      },
      {
        "from": [
          "Oceanic Steamship Company",
          "Oceanic Steamship Co.",
          "Oceanic Steamship"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Company"
      },
      {
        "from": [
          "Society Of Colonial Wars In The State Of New York",
          "Society Of Colonial Wars In The State Of New Jersey",
          "Society Of Colonial Wars In State Of New Jersey"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Society Of Colonial Wars In The State Of New York"
      },
      {
        "from": [
          "New England Society In The City Of New York",
          "The Officers Of The New England Society In The City Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Society In The City Of New York"
      },
      {
        "from": [
          "John Doscher Restaurant",
          "John Doscher's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "John Doscher Restaurant"
      },
      {
        "from": [
          "Dinner Menu, S. S. Vaderland, March 18th, 1910.",
          "Supper Menu, S. S. Vaderland, March 18th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "University Club",
          "The University Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "University Club"
      },
      {
        "from": [
          "Restaurant Name Andor Location Not Given",
          "Restaurant Andor Location Not Given."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Name Andor Location Not Given"
      },
      {
        "from": [
          "Pacific Mail Steamship Company",
          "Mail Steamship Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail Steamship Company"
      },
      {
        "from": [
          "The Mouquin Restaurant And Wine Co.",
          "Mouquin Restaurant And Wine Co"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Mouquin Restaurant And Wine Co."
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyd Bremen-amerika"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Maine",
          "New York Commandery Of The Military Order Of The Loyal Legion Of The United States"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Maine"
      },
      {
        "from": [
          "Oceanic Steamship Co.",
          "Oceanic Steamship"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Co."
      },
      {
        "from": [
          "Saint David's Society Of The State Of New York",
          "St. David's Society Of The State Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saint David's Society Of The State Of New York"
      },
      {
        "from": [
          "The New Haven Railroad",
          "The New Haven R. R. Railroad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Haven Railroad"
      },
      {
        "from": [
          "Santa Fe Route Dining Car Service",
          "Santa Fe Dining Car Service"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Santa Fe Route Dining Car Service"
      },
      {
        "from": [
          "Hamburg-amerika Linie",
          "Hamburg- Armerika Linie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg-amerika Linie"
      },
      {
        "from": [
          "Pacific Mail Steamship Co.Trans Pacific Line",
          "Pacific Mail Steamship Co.Trans-paciic Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail Steamship Co.Trans Pacific Line"
      }
    ],
    "description": "Mass edit cells in column sponsor_cluster"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "event",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "event_cluster",
    "columnInsertIndex": 5,
    "description": "Create column event_cluster at index 5 based on column event using expression grel:value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Lunch & Dinner",
          "Lunch Dinner",
          "Dinner - Lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch & Dinner"
      },
      {
        "from": [
          "Daily Menu, Dinner",
          "Daily Dinner Menu",
          "Daily Menu Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Menu, Dinner"
      },
      {
        "from": [
          "Lunch",
          "Lunch ",
          "Lunch."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch"
      },
      {
        "from": [
          "Daily Lunch Menu",
          "Daily Menu, Lunch",
          "Daily Menu Lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Lunch Menu"
      },
      {
        "from": [
          "Lunch Or Dinner",
          "Dinner Or Lunch",
          "Lunch &or Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch Or Dinner"
      },
      {
        "from": [
          "Dinner",
          "Dinner ",
          "Dinner,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Banquet And Reception",
          "Reception And Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet And Reception"
      },
      {
        "from": [
          "Table D'hote Dinner",
          "Dinner Table D'hote"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Table D'hote Dinner"
      },
      {
        "from": [
          "Afternoon Tea",
          "Afternoon Tea "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Afternoon Tea"
      },
      {
        "from": [
          "Dinner - Second Cabin",
          "Dinner Second Cabin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner - Second Cabin"
      },
      {
        "from": [
          "Dinner,second Cabin",
          "Dinner-second Cabin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner,second Cabin"
      },
      {
        "from": [
          "Luncheon Table D'hote",
          "Table D'hote Luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon Table D'hote"
      },
      {
        "from": [
          "Ladies Night",
          "Ladies' Night"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ladies Night"
      },
      {
        "from": [
          "Supper",
          "Supper "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Supper"
      },
      {
        "from": [
          "Breakfast And Supper",
          "Supper And Breakfast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast And Supper"
      },
      {
        "from": [
          "Fruhstuck-breakfast",
          "Fruhstuckbreakfast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fruhstuck-breakfast"
      },
      {
        "from": [
          "Washington's Birthday Banquet",
          "Banquet Washington's Birthday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washington's Birthday Banquet"
      },
      {
        "from": [
          "Abend-essen",
          "Abendessen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Abend-essen"
      },
      {
        "from": [
          "Dinner A La Carte",
          "A La Carte Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner A La Carte"
      },
      {
        "from": [
          "Breakfast  Held By Nordeutscher Lloyd Bremen At On Board The Ss George Washington",
          "Breakfast Held By Nordeutscher Lloyd Bremen At On Board The Ss George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast  Held By Nordeutscher Lloyd Bremen At On Board The Ss George Washington"
      },
      {
        "from": [
          "Breakfast",
          "Breakfast "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast"
      },
      {
        "from": [
          "Luncheon A La Carte",
          "Luncheon, A La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon A La Carte"
      },
      {
        "from": [
          "Lincoln's Birthday Dinner",
          "Dinner, Lincolns Birthday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lincoln's Birthday Dinner"
      },
      {
        "from": [
          "New Year's Dinner",
          "New Years Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Year's Dinner"
      },
      {
        "from": [
          "Fifth Annual Dinner",
          "Dinner, Fifth Annual"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Annual Dinner"
      },
      {
        "from": [
          "St. Valentine's Day Dinner",
          "St. Valentines Day Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Valentine's Day Dinner"
      },
      {
        "from": [
          "Fruhstucklunch",
          "Fruhstuck-lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fruhstucklunch"
      },
      {
        "from": [
          "New Year's Day Dinner",
          "New Years Day Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Year's Day Dinner"
      },
      {
        "from": [
          "Eighth Annual Banquet",
          "Eighth Annual Banquet'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eighth Annual Banquet"
      },
      {
        "from": [
          "Daily Menu, Breakfast",
          "Daily Breakfast Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Menu, Breakfast"
      },
      {
        "from": [
          "Daily Menu, Luncheon",
          "Daily Luncheon Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Menu, Luncheon"
      },
      {
        "from": [
          "Inspection Trip, Breakfast",
          "Inspection Trip - Breakfast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Inspection Trip, Breakfast"
      },
      {
        "from": [
          "Mittagessen - Dinner",
          "Mittagessen Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mittagessen - Dinner"
      },
      {
        "from": [
          "Lunch-dinner",
          "Lunchdinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch-dinner"
      },
      {
        "from": [
          "Middagdinner",
          "Middag-dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Middagdinner"
      },
      {
        "from": [
          "Mittagessen",
          "Mittag-essen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mittagessen"
      },
      {
        "from": [
          "Inspection Trip - Luncheon",
          "Inspection Trip, Luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Inspection Trip - Luncheon"
      }
    ],
    "description": "Mass edit cells in column event_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Dinnerdiner",
          "Dinerdinner",
          "Dinner, Diner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinnerdiner"
      },
      {
        "from": [
          "Lunch & Dinner",
          "Lunch-dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch & Dinner"
      },
      {
        "from": [
          "Dinner A La Carte",
          "Dinner-a La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner A La Carte"
      },
      {
        "from": [
          "Daily Menu, Luncheon",
          "Daily Menu,luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Menu, Luncheon"
      },
      {
        "from": [
          "Wedding Dinner",
          "Weddingdinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wedding Dinner"
      },
      {
        "from": [
          "Breakfast - Second Cabin",
          "Breakfast-second Cabin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast - Second Cabin"
      },
      {
        "from": [
          "Breakfast Lunch Dinner",
          "Breakfast,lunch & Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast Lunch Dinner"
      },
      {
        "from": [
          "Daily Menu, Supper",
          "Daily Menu,supper"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Menu, Supper"
      },
      {
        "from": [
          "Mittagessen - Dinner",
          "Mittagessendinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mittagessen - Dinner"
      },
      {
        "from": [
          "Dinner",
          "Dinnner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Dejeuner Fourchetteluncheon",
          "Dejeuner Fourchette Luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dejeuner Fourchetteluncheon"
      },
      {
        "from": [
          "Dinner Dance",
          "Dinner-dance"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Dance"
      },
      {
        "from": [
          "Dinner - Second Cabin",
          "Dinner,second Cabin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner - Second Cabin"
      },
      {
        "from": [
          "Fourth Of July Dinner",
          "Fourth Ofjuly Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fourth Of July Dinner"
      },
      {
        "from": [
          "Daily Menu, Dinner",
          "Daily Menu,dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Menu, Dinner"
      }
    ],
    "description": "Mass edit cells in column event_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Supper Menu",
          "Supper Men"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Supper Menu"
      },
      {
        "from": [
          "Christmas Dinner",
          "Christmas Dinnr"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Christmas Dinner"
      },
      {
        "from": [
          "Breakfast - A La Carte",
          "Breakfast ˆ La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast - A La Carte"
      }
    ],
    "description": "Mass edit cells in column event_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Breakfast Lunch Dinner",
          "Breakfast, Lunch And Supper",
          "Breakfast & Luncheon",
          "Breakfast, Lunch And Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast Lunch Dinner"
      },
      {
        "from": [
          "Dinner",
          "Diner",
          "Dnner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Mittagessen",
          "Mitagessen",
          "Mittagesen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mittagessen"
      },
      {
        "from": [
          "St. Valentine's Day Dinner",
          "St. Valentine's Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Valentine's Day Dinner"
      },
      {
        "from": [
          "Lunch A La Carte",
          "Lunch ˆ La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch A La Carte"
      },
      {
        "from": [
          "Dinner A La Carte",
          "Dinner ˆ La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner A La Carte"
      }
    ],
    "description": "Mass edit cells in column event_cluster"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "place",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "place_cluster",
    "columnInsertIndex": 8,
    "description": "Create column place_cluster at index 8 based on column place using expression grel:value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "En Route \"friedrich Der Grosse\"",
          "En Route - \"friedrich Der Grosse\"",
          "En Route \" Friedrich Der Grosse\"",
          "En Route \"friedrich Der Grosse \"",
          "En Route 'friedrich Der Grosse\"",
          "En Route - 'friedrich Der Grosse \"",
          "En Route - :friedrich Der Grosse\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route - \"friedrich Der Grosse\""
      },
      {
        "from": [
          "Delmonico's Ny",
          "Delmonico's, Ny",
          "Delmonico's, N.Y.",
          "Delmonicos Ny",
          "Delmonicos', Ny",
          "Delmonicos, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's Ny"
      },
      {
        "from": [
          "Auditorium Hotel, Chicago, Il",
          "Auditorium Hotel Chicago, Il",
          "Auditorium Hotel , Chicago, Il",
          "Auditorium Hotel Chicago Il",
          "Auditorium Hotel, Chicago Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium Hotel, Chicago, Il"
      },
      {
        "from": [
          "Ss Friesland",
          "S.S. Friesland",
          "Ss. Friesland",
          "S.S. \"friesland\"",
          "Ss \"friesland\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Friesland"
      },
      {
        "from": [
          "Delmonico's, New York, Ny",
          "Delmonico's, New York, N.Y.",
          "Delmonicos, New York, N.Y.",
          "Delmonicos, New York, Ny",
          "Delmonico's. New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's, New York, Ny"
      },
      {
        "from": [
          "The New Willard, Washington, Dc",
          "New Willard, The, Washington, Dc",
          "The New Willard Washington, Dc",
          "The New Willard, Washington Dc",
          "The New Willard, Washington, D.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard, Washington, Dc"
      },
      {
        "from": [
          "En Route - Ss \"lahn\"",
          "En Route - \"ss Lahn\"",
          "En Route \"ss Lahn\"",
          "En Route -ss \"lahn\"",
          "En Route _ Ss \"lahn\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route - Ss \"lahn\""
      },
      {
        "from": [
          "En Route S.S.\"barbarossa\"",
          "En Route - S.S.Barbarossa",
          "En Route S.S.Barbarossa",
          "En Route S.S.Barbarossa\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S.\"barbarossa\""
      },
      {
        "from": [
          "Old Point Comfort, Va",
          "Old Point Comfort Va",
          "Old Point Comfort, Va.",
          "Old Point, Comfort, Va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Old Point Comfort, Va"
      },
      {
        "from": [
          "Hotel Manhattan, Ny",
          "Hotel Manhattan Ny",
          "Manhattan Hotel Ny",
          "Manhattan Hotel, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan, Ny"
      },
      {
        "from": [
          "The Auditorium, Chicago, Il",
          "The Auditorium Chicago, Il",
          "Auditorium, The, Chicago, Il",
          "The Auditorium Chicago Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Auditorium, Chicago, Il"
      },
      {
        "from": [
          "Philadelphia, Pa",
          "Philadelphia Pa",
          "Philadelphia, Pa.",
          "Philadelphia. Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia, Pa"
      },
      {
        "from": [
          "Rms Campania",
          "R.M.S. Campania",
          "R.M.S. \"campania\"",
          "R.M.S. \" Campania\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rms Campania"
      },
      {
        "from": [
          "Nassau,n.P.Bahamas",
          "Nassau,np,bahamas",
          "Nassau,n.P.,bahamas",
          "Nassau,npbahamas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau,n.P.Bahamas"
      },
      {
        "from": [
          "Hotel Pfister, Milwaukee, Wi",
          "Hotel Pfister, Milwaukee Wi",
          "Pfister Hotel, Milwaukee, Wi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pfister, Milwaukee, Wi"
      },
      {
        "from": [
          "Ss: Kamakura Maru",
          "Ss: \"kamakura Maru\"",
          "Ss Kamakura Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss: Kamakura Maru"
      },
      {
        "from": [
          "Sherry's Ny",
          "Sherry's, Ny",
          "Sherrys, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherry's Ny"
      },
      {
        "from": [
          "66 St. & B'way Ny",
          "66 St. & B'way. Ny",
          "66 St. & Bway. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66 St. & B'way Ny"
      },
      {
        "from": [
          "R.M.S. \"empress Of China\"",
          "Rms Empress Of China",
          "R.M.S. Empress Of China"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"empress Of China\""
      },
      {
        "from": [
          "Hotel Brunswick Ny",
          "Brunswick Hotel Ny",
          "Hotel Brunswick, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Brunswick Ny"
      },
      {
        "from": [
          "Ss Westernland",
          "S.S. Westernland",
          "S.S. \"westernland\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Westernland"
      },
      {
        "from": [
          "Washington, Dc",
          "Washington, D.C.",
          "Washington Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washington, Dc"
      },
      {
        "from": [
          "Delmonico's,ny",
          "Delmonico'sny",
          "Delmonicos,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's,ny"
      },
      {
        "from": [
          "Long Beach,l.I.,ny",
          "Long Beach,l.I.,ny&",
          "Long Beach,li,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Long Beach,l.I.,ny"
      },
      {
        "from": [
          "Delmonico's, New York City",
          "New York City Delmonico's",
          "New York City, Delmonico's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's, New York City"
      },
      {
        "from": [
          "Lakewood, Nj",
          "Lakewood Nj",
          "Lakewood, N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lakewood, Nj"
      },
      {
        "from": [
          "Mercantile Club St Louis, Mo",
          "Mercantile Club, St Louis Mo",
          "Mercantile Club, St. Louis, Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mercantile Club St Louis, Mo"
      },
      {
        "from": [
          "Delmonico's New York",
          "Delmonico's, New York",
          "Delmonicos, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's New York"
      },
      {
        "from": [
          "Marlborough Hotel, ",
          "Hotel Marlborough",
          "Hotel Marlborough, "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Marlborough Hotel, "
      },
      {
        "from": [
          "Long Beach, L.I, Ny",
          "Long Beach, Li, Ny",
          "Long Beach, L.I., Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Long Beach, L.I, Ny"
      },
      {
        "from": [
          "Hotel Savoy",
          "Savoy Hotel",
          "Savoy Hotel, "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy"
      },
      {
        "from": [
          "Ss Coptic",
          "S.S. \"coptic\"",
          "S.S. Coptic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Coptic"
      },
      {
        "from": [
          "New York, Ny",
          "New York Ny",
          "New York, Ny "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York, Ny"
      },
      {
        "from": [
          "Bellevue-stratford Hotel, Philadelphia, Pa",
          "Hotel Bellevue-stratford, Philadelphia, Pa",
          "Hotel Bellevue-stratford Philadelphia, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue-stratford Hotel, Philadelphia, Pa"
      },
      {
        "from": [
          "New York",
          "\"new York\"",
          "New York "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York"
      },
      {
        "from": [
          "R.M.S. \"etruria\"",
          "R.M.S. Etruria",
          "Rms Etruria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"etruria\""
      },
      {
        "from": [
          "St. Denis Hotel",
          "Hotel St. Denis",
          "St. Denis Hotel, "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "The Hollenden Cleveland Oh",
          "The Hollenden, Cleveland Oh",
          "The Hollenden, Cleveland, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Hollenden Cleveland Oh"
      },
      {
        "from": [
          "Ss City Of Para",
          "S.S. \"city Of Para\"",
          "S.S. \"city Of Para'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss City Of Para"
      },
      {
        "from": [
          "Young's Hotel, Boston, Ma",
          "Young\"s Hotel, Boston, Ma",
          "Young's Hotel, Boston Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Young's Hotel, Boston, Ma"
      },
      {
        "from": [
          "Hotel Majestic Philadelphia, Pa",
          "Hotel Majestic, Philadelphia, Pa",
          "Majestic Hotel, Philadelphia. Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Majestic Philadelphia, Pa"
      },
      {
        "from": [
          "Delmonico's,new York",
          "Delmonicos,new York",
          "Delmonico's.New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's,new York"
      },
      {
        "from": [
          "Brunswick Hotel, Boston, Ma",
          "Hotel Brunswick, Boston, Ma",
          "Hotel Brunswick, Boston Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brunswick Hotel, Boston, Ma"
      },
      {
        "from": [
          "R.M.S. \"lucania\"",
          "Rms Lucania",
          "R.M.S. Lucania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"lucania\""
      },
      {
        "from": [
          "Clinton County, Ny",
          "Clinton County Ny",
          "Clinton County, Ny."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clinton County, Ny"
      },
      {
        "from": [
          "Ss Kasuga",
          "S.S. Kasuga",
          "Ss: Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Kasuga"
      },
      {
        "from": [
          "Hotel Vendome, Boston, Ma",
          "Hotel Vendome Boston, Ma",
          "Vendome Hotel, Boston, Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome, Boston, Ma"
      },
      {
        "from": [
          "Providence, Ri",
          "Providence, R.I.",
          "Providence Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Providence, Ri"
      },
      {
        "from": [
          "The Arlington, Washington, D.C.",
          "The Arlington Washington Dc",
          "The Arlington, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Arlington, Washington, D.C."
      },
      {
        "from": [
          "Astor Hotel, New York, Ny",
          "Hotel Astor, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Astor Hotel, New York, Ny"
      },
      {
        "from": [
          "Parker House Boston,mass ",
          "Parker House, Boston,mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House Boston,mass "
      },
      {
        "from": [
          "En Route \"h.H.Meier\"",
          "En Route \" H.H.Meier\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route \"h.H.Meier\""
      },
      {
        "from": [
          "Berlin, Germany",
          "Berlin Germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Berlin, Germany"
      },
      {
        "from": [
          "New Algonquin Club, Boston, Ma",
          "New Algonquin Club Boston, Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Algonquin Club, Boston, Ma"
      },
      {
        "from": [
          "Konigin Luise",
          "\"konigin Luise\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Konigin Luise"
      },
      {
        "from": [
          "Hotel Savoy New York",
          "Hotel Savoy, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy New York"
      },
      {
        "from": [
          "Savoy Hotel, New York, Ny",
          "Hotel Savoy, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Savoy Hotel, New York, Ny"
      },
      {
        "from": [
          "Aboard R.M.S. \"etruria\"",
          "Aboard R.M.S. Etruria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard R.M.S. \"etruria\""
      },
      {
        "from": [
          "Lincoln Club - Ny",
          "Lincoln Club Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lincoln Club - Ny"
      },
      {
        "from": [
          "St. Augustine, Fla",
          "St. Augustine, Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Augustine, Fla"
      },
      {
        "from": [
          "Gramercy Park Hotel",
          "Hotel Gramercy Park"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gramercy Park Hotel"
      },
      {
        "from": [
          "Nassau, N.P.",
          "Nassau, Np"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau, N.P."
      },
      {
        "from": [
          "Chicago, Il",
          "Chicago Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Il"
      },
      {
        "from": [
          "Hoffman House New York, Ny",
          "Hoffman House, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoffman House New York, Ny"
      },
      {
        "from": [
          "Brooklyn,ny",
          "Brooklynny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brooklyn,ny"
      },
      {
        "from": [
          "Hotel Jefferson, St. Louis, Mo",
          "Jefferson Hotel, St. Louis Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Jefferson, St. Louis, Mo"
      },
      {
        "from": [
          "Aboard Paquebot La Provence",
          "Aboard Paquebot \"la Provence\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Paquebot La Provence"
      },
      {
        "from": [
          "Quebec, Canada",
          "Quebec Canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Quebec, Canada"
      },
      {
        "from": [
          "Hotel Stenton Philadelphia Pa",
          "Hotel Stenton, Philadelphia, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Stenton Philadelphia Pa"
      },
      {
        "from": [
          "Ss Trinidad",
          "S.S. \"trinidad\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Trinidad"
      },
      {
        "from": [
          "Liverpool England}",
          "Liverpool, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Liverpool England}"
      },
      {
        "from": [
          "Portland, Me",
          "Portland Me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland, Me"
      },
      {
        "from": [
          "Aboard Paquebot \"la Savoie\"",
          "Aboard Paquebot La Savoie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Paquebot \"la Savoie\""
      },
      {
        "from": [
          "Young's Hotel",
          "Young's Hotel "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Young's Hotel"
      },
      {
        "from": [
          "Queen City Club, Cincinnati, Oh",
          "Queen City Club Cincinnati Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Queen City Club, Cincinnati, Oh"
      },
      {
        "from": [
          "Mechanics Hall, Boston, Ma",
          "Mechanics' Hall, Boston, Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mechanics Hall, Boston, Ma"
      },
      {
        "from": [
          "Eagle Hotel Gettysburg, Pa",
          "Eagle Hotel, Gettysburg, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eagle Hotel Gettysburg, Pa"
      },
      {
        "from": [
          "Hotel Del Campidoglio, New York, Ny",
          "Hotel Del Campidoglio, New York, N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Del Campidoglio, New York, Ny"
      },
      {
        "from": [
          "Clinton County,ny",
          "Clinton County.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clinton County,ny"
      },
      {
        "from": [
          "Hotel Gramercy Park 52 Gramercy Park North",
          "Gramercy Park Hotel Hotel Gramercy Park 52 Gramercy Park North"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Gramercy Park 52 Gramercy Park North"
      },
      {
        "from": [
          "Tacoma Wa",
          "Tacoma, Wa}"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tacoma Wa"
      },
      {
        "from": [
          "The Auditorium,chicago,ill",
          "The Auditorium,chicago,ill."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Auditorium,chicago,ill"
      },
      {
        "from": [
          "Ss City Of Rio De Janeiro",
          "S.S. \"city Of Rio De Janeiro\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss City Of Rio De Janeiro"
      },
      {
        "from": [
          "R.M.S. Empress Of India",
          "R.M.S. \"empress Of India\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Empress Of India"
      },
      {
        "from": [
          "Baltimore,md",
          "Baltimore,md."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baltimore,md"
      },
      {
        "from": [
          "En Route Aboard Ss Kasuga Maru",
          "En Route Aboard Ss. Kasuga Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss Kasuga Maru"
      },
      {
        "from": [
          "At Sea",
          "At Sea "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "At Sea"
      },
      {
        "from": [
          "Hotel Zinzendorf, Winston-salem, Nc",
          "Zinzendorf Hotel, Winston-salem, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Zinzendorf, Winston-salem, Nc"
      },
      {
        "from": [
          "Cleveland, Ohio",
          "Cleveland. Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland, Ohio"
      },
      {
        "from": [
          "The Ten Eyck, Albany, Ny",
          "Ten Eyck, The, Albany, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Ten Eyck, Albany, Ny"
      },
      {
        "from": [
          "Butler, Pa",
          "Butler, Pa."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Butler, Pa"
      },
      {
        "from": [
          "Chicago, Ill",
          "Chicago ,ill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Ill"
      },
      {
        "from": [
          "Hotel Majestic",
          "Majestic Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Majestic"
      },
      {
        "from": [
          "Chicago,il",
          "Chicago,il."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago,il"
      },
      {
        "from": [
          "Hotel Astor",
          "Astor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Astor"
      },
      {
        "from": [
          "Virginia Beach, Va",
          "Virginia Beach Va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Virginia Beach, Va"
      },
      {
        "from": [
          "Hotel Savoy, Ny",
          "Hotel Savoy Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy, Ny"
      },
      {
        "from": [
          "Manila, P.I.",
          "Manila, Pi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manila, P.I."
      },
      {
        "from": [
          "Bellevue Hotel, Philadelphia, Pa",
          "Hotel Bellevue, Philadelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue Hotel, Philadelphia, Pa"
      },
      {
        "from": [
          "St. Petersburg,russia",
          "St. Petersburg.Russia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Petersburg,russia"
      },
      {
        "from": [
          "Grand Pacific Hotel, Chicago, Il",
          "Grand Pacific Hotel Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Pacific Hotel, Chicago, Il"
      },
      {
        "from": [
          "Delmonico's New York,ny",
          "Delmonico's, New York,n.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's New York,ny"
      },
      {
        "from": [
          "Montreal Canada",
          "Montreal, Canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Montreal Canada"
      },
      {
        "from": [
          "Nassau, N.P. Bahamas",
          "Nassau, N.P., Bahamas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau, N.P. Bahamas"
      },
      {
        "from": [
          "Tampa, Fl",
          "Tampa Fl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa, Fl"
      },
      {
        "from": [
          "Manhattan Hotel, New York, Ny",
          "Hotel Manhattan, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Hotel, New York, Ny"
      },
      {
        "from": [
          "Union League Philadelphia Pa",
          "Union League, Philadelphia, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League Philadelphia Pa"
      },
      {
        "from": [
          "Narragansett Hotel, Providence Ri",
          "Narragansett Hotel, Providence, Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Hotel, Providence Ri"
      },
      {
        "from": [
          "The Raleigh, Washington, Dc",
          "The Raleigh, Washington Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Raleigh, Washington, Dc"
      },
      {
        "from": [
          "Horticultural Hall, Philadelphia, Pa",
          "Horticultural Hall, Philadelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Horticultural Hall, Philadelphia, Pa"
      },
      {
        "from": [
          "Commercial Club, Portland, Or",
          "Portland Commercial Club, Portland, Or"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial Club, Portland, Or"
      },
      {
        "from": [
          "Boston, Ma",
          "Boston Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston, Ma"
      },
      {
        "from": [
          "The Wellington, Providence Ri",
          "Wellington, The, Providence, Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Wellington, Providence Ri"
      },
      {
        "from": [
          "Fla",
          "Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fla"
      },
      {
        "from": [
          "New York Athletic Club",
          "New York Athletic Club, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Athletic Club"
      },
      {
        "from": [
          "Tampa,fla.",
          "Tampa.Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa,fla."
      },
      {
        "from": [
          "Boston, Mass",
          "Boston, Mass."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston, Mass"
      },
      {
        "from": [
          "Hotel St. George, Nyack, Ny",
          "St. George Hotel, Nyack, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. George, Nyack, Ny"
      },
      {
        "from": [
          "En Route Aboard Ss Kobe Maru",
          "En Route Aboard Ss. Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss Kobe Maru"
      },
      {
        "from": [
          "Melbourne, Australia",
          "Melbourne Australia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Melbourne, Australia"
      },
      {
        "from": [
          "Nos. 667 To 677 Broadway, Opposite Bond Street, Midway Between Battery And Central Park, New York Ny",
          "Nos. 667 To 677 Broadway, Opposite Bond Street, Midway Between Battery And Central Park, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nos. 667 To 677 Broadway, Opposite Bond Street, Midway Between Battery And Central Park, New York Ny"
      },
      {
        "from": [
          "U.S.M.S. New York",
          "Usms New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. New York"
      },
      {
        "from": [
          "Washington,d.C.",
          "Washington,dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washington,d.C."
      },
      {
        "from": [
          "Copenhagen, Denmark",
          "Copenhagen Denmark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copenhagen, Denmark"
      },
      {
        "from": [
          "Ny",
          "N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ny"
      },
      {
        "from": [
          "Denver, Colo.",
          "Denver, Colo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Denver, Colo."
      },
      {
        "from": [
          "S.S. Nacoochee",
          "Ss Nacoochee"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Nacoochee"
      },
      {
        "from": [
          "Ss Rio De Janeiro",
          "Ss: Rio De Janeiro"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Rio De Janeiro"
      },
      {
        "from": [
          "Rms Oceanic",
          "R.M.S. Oceanic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rms Oceanic"
      },
      {
        "from": [
          "Argyle, The, Brooklyn, Ny",
          "The Argyle, Brooklyn, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Argyle, The, Brooklyn, Ny"
      },
      {
        "from": [
          "Chamberlin's Washington,dc",
          "Chamberlin's, Washington,d.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chamberlin's Washington,dc"
      },
      {
        "from": [
          "Union League Club Ny",
          "Union League Club, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League Club Ny"
      },
      {
        "from": [
          "Hotel St. Denis, Ny",
          "St. Denis Hotel Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. Denis, Ny"
      },
      {
        "from": [
          "Tontine Hotel, New Haven, Ct",
          "New Tontine Hotel, New Haven Ct"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tontine Hotel, New Haven, Ct"
      },
      {
        "from": [
          "Delmonico's",
          "Delmonicos"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's"
      },
      {
        "from": [
          "\"the Argyle\"",
          "The Argyle "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"the Argyle\""
      },
      {
        "from": [
          "Manhattan Beach, Long Island Ny",
          "Manhattan Beach, Long Island, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Beach, Long Island Ny"
      },
      {
        "from": [
          "En Route Aboard S.S. \"kobe Waru\"",
          "En Route Aboard S.S. Kobe Waru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. \"kobe Waru\""
      },
      {
        "from": [
          "Germantown Pa",
          "Germantown, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Germantown Pa"
      },
      {
        "from": [
          "Dampfer H.H. Meier",
          "Dampfer \"h.H. Meier\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dampfer H.H. Meier"
      },
      {
        "from": [
          "Omaha Nebraska",
          "Omaha, Nebraska"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omaha Nebraska"
      },
      {
        "from": [
          "New Willard Washington, Dc",
          "New Willard, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Willard Washington, Dc"
      },
      {
        "from": [
          "Chicago,ill.",
          "Chicago,ill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago,ill."
      },
      {
        "from": [
          "Cincinnati , Ohio",
          "Cincinnati, Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati , Ohio"
      },
      {
        "from": [
          "Dampfer Kaiser Wilhelm Der Grosse",
          "Dampfer \"kaiser Wilhelm Der Grosse\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dampfer Kaiser Wilhelm Der Grosse"
      },
      {
        "from": [
          "Brunswick,the,boston,mass",
          "Brunswick,the,bostonmass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brunswick,the,boston,mass"
      },
      {
        "from": [
          "Philadelphia,pa.",
          "Philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia,pa."
      },
      {
        "from": [
          "Waldorf-astoria Ny",
          "Waldorf-astoria, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria Ny"
      },
      {
        "from": [
          "Ascot England",
          "Ascot, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ascot England"
      },
      {
        "from": [
          "Logan House, Altoona, Pa",
          "Logan House Altoona, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Logan House, Altoona, Pa"
      },
      {
        "from": [
          "Penn",
          "Penn."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Penn"
      },
      {
        "from": [
          "Narragansett Pier R.I.",
          "Narragansett Pier, Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Pier R.I."
      },
      {
        "from": [
          "Union Club",
          "Union Club, "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Club"
      },
      {
        "from": [
          "Adelaide, Australia",
          "Adelaide Australia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adelaide, Australia"
      },
      {
        "from": [
          "Grand Hotel, Cincinnati Oh",
          "Grand Hotel, Cincinnati, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel, Cincinnati Oh"
      },
      {
        "from": [
          "Delmonico's,new York Ny",
          "Delmonico's,new York, N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's,new York Ny"
      },
      {
        "from": [
          "En Route S.S Vaderland",
          "En Route S.S. Vaderland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S Vaderland"
      },
      {
        "from": [
          "Academy Of Music Brooklyn, Ny",
          "Academy Of Music, Brooklyn, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Academy Of Music Brooklyn, Ny"
      },
      {
        "from": [
          "San Francisco,ca",
          "San Francisco,ca."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Francisco,ca"
      },
      {
        "from": [
          "St. Louis, Mo",
          "St. Louis Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Louis, Mo"
      },
      {
        "from": [
          "Fairmont Hotel San Francisco, Ca",
          "Fairmont Hotel, San Francisco, Ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fairmont Hotel San Francisco, Ca"
      },
      {
        "from": [
          "Zermatt, Switzerland",
          "Zermatt Switzerland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Zermatt, Switzerland"
      },
      {
        "from": [
          "Park Row Bldg. Ny",
          "Park Row Bldg., Ny, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row Bldg. Ny"
      },
      {
        "from": [
          "St.Denis Hotel,ny",
          "St.Denis Hotelny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Denis Hotel,ny"
      },
      {
        "from": [
          "The Plaza",
          "Plaza, The"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Plaza"
      },
      {
        "from": [
          "Saratoga Springs, Ny",
          "Saratoga Springs, Ny."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saratoga Springs, Ny"
      },
      {
        "from": [
          "Aboard Paquebot La Touraine",
          "Aboard Paquebot \"la Touraine\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Paquebot La Touraine"
      },
      {
        "from": [
          "Auditorium",
          "Auditorium, "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium"
      },
      {
        "from": [
          "Hotel Iroquois,buffalo,n.Y.",
          "Hotel Iroquois,buffalo,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Iroquois,buffalo,n.Y."
      },
      {
        "from": [
          "Waldorf-astoria, New York",
          "Waldorf-astoria New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York"
      },
      {
        "from": [
          "Hotel Continental Paris, France",
          "Hotel Continental, Paris, France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Continental Paris, France"
      },
      {
        "from": [
          "Pawling, Ny",
          "Pawling Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pawling, Ny"
      },
      {
        "from": [
          "R.M.S.Rotterdam",
          "Rms-rotterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S.Rotterdam"
      },
      {
        "from": [
          "Buffalo, Ny",
          "Buffalo Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Buffalo, Ny"
      },
      {
        "from": [
          "Ss Kaiser Wilhelm Der Grosse",
          "S.S. \"kaiser Wilhelm Der Grosse\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Kaiser Wilhelm Der Grosse"
      },
      {
        "from": [
          "Aboard 'prinz Friedrich Wilhelm'",
          "Aboard Prinz Friedrich Wilhelm''"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard 'prinz Friedrich Wilhelm'"
      },
      {
        "from": [
          "En Route Aboard Above",
          "En Route Aboard Above "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Above"
      },
      {
        "from": [
          "Russell House, Detroit, Mi",
          "Russell House Detroit, Mi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Russell House, Detroit, Mi"
      },
      {
        "from": [
          "Bar Harbor Me",
          "Bar Harbor, Me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bar Harbor Me"
      },
      {
        "from": [
          "Schnelldampfer \"auguste Victoria\"",
          "Schnelldampfer: \"auguste Victoria\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schnelldampfer \"auguste Victoria\""
      },
      {
        "from": [
          "Ss Doric",
          "S.S. \"doric\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Doric"
      },
      {
        "from": [
          "S.S. Zealandia",
          "Ss Zealandia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Zealandia"
      },
      {
        "from": [
          "En Route S.S. Zeeland",
          "En Route S.S Zeeland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S. Zeeland"
      },
      {
        "from": [
          "The Arlington,wash.Dc",
          "The Arlington,wash.Dc."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Arlington,wash.Dc"
      },
      {
        "from": [
          "Miramar",
          "Miramar "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miramar"
      },
      {
        "from": [
          "Aboard Paquebot La Lorraine",
          "Aboard Paquebot \"la Lorraine\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Paquebot La Lorraine"
      },
      {
        "from": [
          "57 Broad Street, Ny",
          "57 Broad Street - Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 Broad Street, Ny"
      },
      {
        "from": [
          "Cincinnati, Oh",
          "Cincinnati Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati, Oh"
      },
      {
        "from": [
          "En Route Aboard Ss. Kasuga",
          "En Route Aboard Ss Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss. Kasuga"
      },
      {
        "from": [
          "Aboard Paquebot \"la Bretagne\"",
          "Aboard Paquebot La Bretagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Paquebot \"la Bretagne\""
      },
      {
        "from": [
          "Minneapolis Club Minneapolis, Mn",
          "Minneapolis Club, Minneapolis, Mn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Minneapolis Club Minneapolis, Mn"
      },
      {
        "from": [
          "En Route Aboard S.S. Friesland",
          "En Route Aboard Ss Friesland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Friesland"
      },
      {
        "from": [
          "Atlantic City, Nj",
          "Atlantic City, N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Atlantic City, Nj"
      },
      {
        "from": [
          "Bway & 63rd St. Ny",
          "B'way & 63rd St. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bway & 63rd St. Ny"
      },
      {
        "from": [
          "Syracuse Ny",
          "Syracuse, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Syracuse Ny"
      },
      {
        "from": [
          "Adirondacks, Ny",
          "Adirondacks Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adirondacks, Ny"
      },
      {
        "from": [
          "Franconia Notch Nh",
          "Franconia Notch Nh,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Franconia Notch Nh"
      },
      {
        "from": [
          "139 Eighth Street Bet. Broadway And 4th Ave., New York Ny",
          "139 Eighth Street, Bet. Broadway And 4th Ave., New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "139 Eighth Street Bet. Broadway And 4th Ave., New York Ny"
      },
      {
        "from": [
          "Brooklyn, Ny",
          "Brooklyn Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brooklyn, Ny"
      },
      {
        "from": [
          "Windsor Hotel,ny",
          "Windsor Hotelny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Windsor Hotel,ny"
      },
      {
        "from": [
          "Naples Italy",
          "Naples, Italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Naples Italy"
      },
      {
        "from": [
          "Krueger Auditorium Newark Nj",
          "Krueger Auditorium, Newark, Nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Krueger Auditorium Newark Nj"
      },
      {
        "from": [
          "Rome, Italy",
          "Rome Italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rome, Italy"
      },
      {
        "from": [
          "Ss \"friedrich Der Grosse\"",
          "Ss Friedrich Der Grosse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss \"friedrich Der Grosse\""
      },
      {
        "from": [
          "St. Denis Hotel New York",
          "St. Denis Hotel, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel New York"
      },
      {
        "from": [
          "Terrace Garden",
          "Terrace Garden,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Terrace Garden"
      },
      {
        "from": [
          "66th St. & Bway Ny",
          "66th St & B'way, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66th St. & Bway Ny"
      },
      {
        "from": [
          "Hotel Marlborough, New York, Ny",
          "Marlborough Hotel, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Marlborough, New York, Ny"
      },
      {
        "from": [
          "66th St And Broadway,new York,ny",
          "66th St. And Broadwaynew York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66th St And Broadway,new York,ny"
      },
      {
        "from": [
          "St. Charles Hotel, New Orleans La",
          "St. Charles Hotel, New Orleans, La"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel, New Orleans La"
      },
      {
        "from": [
          "Ellicott Club, Buffalo, Ny",
          "Ellicott Club Buffalo Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ellicott Club, Buffalo, Ny"
      },
      {
        "from": [
          "Campobello Island",
          "Campobello Island,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Campobello Island"
      },
      {
        "from": [
          "Hotel Bellevue",
          "Bellevue Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Bellevue"
      },
      {
        "from": [
          "Cecil Hotel, London, England",
          "Hotel Cecil, London, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cecil Hotel, London, England"
      },
      {
        "from": [
          "Nashville, Tenn",
          "Nashville, Tenn."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nashville, Tenn"
      },
      {
        "from": [
          "Hotel Willard, Washington, Dc",
          "Willard Hotel, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Willard, Washington, Dc"
      },
      {
        "from": [
          "The Waldorf Astoria",
          "Waldorf Astoria, The"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf Astoria"
      },
      {
        "from": [
          "Ss Westernland, En Route",
          "Ss Westernland - En Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Westernland, En Route"
      },
      {
        "from": [
          "Narragansett Pier,r.I.",
          "Narragansett Pier,ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Pier,r.I."
      },
      {
        "from": [
          "Cleveland, Oh",
          "Cleveland Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland, Oh"
      },
      {
        "from": [
          "156 Second Avenue Ny",
          "156 Second Avenue, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "156 Second Avenue Ny"
      },
      {
        "from": [
          "Taylor's Hotel, Jersey City Nj",
          "Taylor's Hotel, Jersey City, N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Taylor's Hotel, Jersey City Nj"
      },
      {
        "from": [
          "Whitehall Rooms, The Hotel Metropole, London England",
          "Whitehall Rooms, The Hotel Metropole, London, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Whitehall Rooms, The Hotel Metropole, London England"
      },
      {
        "from": [
          "Chicago Beach Hotel Chicago, Il",
          "Chicago Beach Hotel, Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago Beach Hotel Chicago, Il"
      },
      {
        "from": [
          "Park Row Building Ny",
          "Park Row Building, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row Building Ny"
      },
      {
        "from": [
          "London,england",
          "London,england "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "London,england"
      },
      {
        "from": [
          "Grand Pacific Hotel",
          "Grand Pacific Hotel,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Pacific Hotel"
      }
    ],
    "description": "Mass edit cells in column place_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "St. Louis, Mo",
          "St.Louis,mo",
          "St Louis,mo",
          "St.Louis, Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Louis, Mo"
      },
      {
        "from": [
          "Planters Hotel, St. Louis, Mo",
          "Planters Hotel, St. Louis,mo",
          "Planters Hotel, St.Louis, Mo",
          "Planters Hotel, St.Louis,mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Planters Hotel, St. Louis, Mo"
      },
      {
        "from": [
          "Delmonico's, New York, Ny",
          "Delmonico's,new York,ny",
          "Delmonico's New York,ny",
          "Delmonico's,new York Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's, New York, Ny"
      },
      {
        "from": [
          "Hotel Iroquois, Buffalo, Ny",
          "Hotel Iroquois, Buffalo,ny",
          "Hotel Iroquois,buffalo,n.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Iroquois, Buffalo, Ny"
      },
      {
        "from": [
          "Waldorf-astoria, New York, Ny",
          "Waldorf Astoria, New York, Ny",
          "Waldorf Astoria,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York, Ny"
      },
      {
        "from": [
          "Nassau, N.P.",
          "Nassau,n.P.",
          "Nassau, N. P.,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau, N.P."
      },
      {
        "from": [
          "Miami Biscayne Bay,fla.",
          "Miami Biscayne Bay, Fla.",
          "Miami,biscayne Bay,fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miami Biscayne Bay,fla."
      },
      {
        "from": [
          "Waldorf-astoria, The, New York, Ny",
          "Waldorf Astoria,the, New York, Ny",
          "Waldorf-astoria,the,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, The, New York, Ny"
      },
      {
        "from": [
          "Put-in-bay Island, Oh",
          "Put In Bay Island, Oh",
          "Put-in-bay-island, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Put-in-bay Island, Oh"
      },
      {
        "from": [
          "En Route, Express-steamer Furst Bismarck",
          "En-route Express-steamer Furst Bismarck",
          "Enroute Express Steamer \"furst Bismarck\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route, Express-steamer Furst Bismarck"
      },
      {
        "from": [
          "St.Augustine,fla.",
          "St. Augustine, Fla",
          "St.Augustine, Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Augustine,fla."
      },
      {
        "from": [
          "Southern Hotel, St. Louis, Mo",
          "Southern Hotel,st. Louis,mo.",
          "Southern Hotel,st.Louis,mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Southern Hotel, St. Louis, Mo"
      },
      {
        "from": [
          "Narragansett Pier R.I.",
          "Narragansett Pier,r.I.",
          "Naragansett Pier, Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Pier R.I."
      },
      {
        "from": [
          "Faneuil Hall, Boston, Mass",
          "Faneuil Hall, Boston,mass",
          "Faneuil Hall,boston,mass."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Faneuil Hall, Boston, Mass"
      },
      {
        "from": [
          "Waldorf-astoria,ny",
          "Waldorf Astoria, Ny",
          "Waldorf-astoria Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria,ny"
      },
      {
        "from": [
          "Chicago,ill.",
          "Chicago, Ill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago,ill."
      },
      {
        "from": [
          "Hoboken, Nj",
          "Hoboken,nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoboken, Nj"
      },
      {
        "from": [
          "57 Broad Street, New York, Ny",
          "57 Broad Street,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 Broad Street, New York, Ny"
      },
      {
        "from": [
          "Copenhagen, Denmark",
          "Copenhagen,denmark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copenhagen, Denmark"
      },
      {
        "from": [
          "En Route - S.S.\"h.H.Meier\"",
          "En Route -s.S. \"h.H.Meier\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route - S.S.\"h.H.Meier\""
      },
      {
        "from": [
          "Chicago Beach Hotel Chicago, Il",
          "Chicago Beach Hotel, Chicago.Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago Beach Hotel Chicago, Il"
      },
      {
        "from": [
          "Buckingham Palace,  London,england",
          "Buckingham Palace, London, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Buckingham Palace,  London,england"
      },
      {
        "from": [
          "En Route Aboard S.S.Zeeland",
          "En Route Aboard S.S. Zeeland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S.Zeeland"
      },
      {
        "from": [
          "St. Nicholas Hotel, St.Louis, Mo",
          "St.Nicholas Hotel,st. Louis,mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Nicholas Hotel, St.Louis, Mo"
      },
      {
        "from": [
          "En Route Aboard Schnelldampfer Express Steamer Auguste Victoria",
          "En Route Aboard Schnelldampfer Express Steamer Auguste-victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Schnelldampfer Express Steamer Auguste Victoria"
      },
      {
        "from": [
          "White Mountains, Nh",
          "White Mountains,n.H."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "White Mountains, Nh"
      },
      {
        "from": [
          "Parker House Boston,mass ",
          "Parker House,boston,mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House Boston,mass "
      },
      {
        "from": [
          "Cincinnati , Ohio",
          "Cincinnati,ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati , Ohio"
      },
      {
        "from": [
          "The Waldorf-astoria",
          "The Waldorf Astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf-astoria"
      },
      {
        "from": [
          "New Orleans, La",
          "New Orleans,la"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Orleans, La"
      },
      {
        "from": [
          "St. George Hotel",
          "St.George Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George Hotel"
      },
      {
        "from": [
          "En Route Aboard S.S. Zealandia",
          "En Route Aboard S.S.Zealandia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Zealandia"
      },
      {
        "from": [
          "Grand Hotel, London, England",
          "Grand Hotel,london, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel, London, England"
      },
      {
        "from": [
          "En Route Aboard Dampfer Friedrich Der Grosse",
          "En Route Aboard Dampfer Friedrich Der Grosser"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Dampfer Friedrich Der Grosse"
      },
      {
        "from": [
          "Cleveland,ohio",
          "Cleveland, Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland,ohio"
      },
      {
        "from": [
          "Rms Campania",
          "R.M.S.\"campania\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rms Campania"
      },
      {
        "from": [
          "Roanoke, Va",
          "Roanoke,va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roanoke, Va"
      },
      {
        "from": [
          "Coronada Beach, Ca.",
          "Coronada Beach,ca."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coronada Beach, Ca."
      },
      {
        "from": [
          "Hotel St. Denis, Ny",
          "Hotel St. Denis,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. Denis, Ny"
      },
      {
        "from": [
          "Ocean House, Newport, Ri",
          "Ocean House,newport,r.I."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ocean House, Newport, Ri"
      },
      {
        "from": [
          "Mercantile Club St Louis, Mo",
          "Mercantile Club, St.Louis Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mercantile Club St Louis, Mo"
      },
      {
        "from": [
          "Hotel St George,nyack-on-hudson,ny",
          "Hotel St.George,nyack-on-hudson,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St George,nyack-on-hudson,ny"
      },
      {
        "from": [
          "Morello's, New York, Ny",
          "Morello's,new York, N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Morello's, New York, Ny"
      },
      {
        "from": [
          "Old Point Comfort, Va",
          "Old Point Comfort,va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Old Point Comfort, Va"
      },
      {
        "from": [
          "Palace Hotel, San Francisco, Ca",
          "Palace Hotel, San Francisco, Cal"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel, San Francisco, Ca"
      },
      {
        "from": [
          "Syracuse Ny",
          "Syracuse,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Syracuse Ny"
      },
      {
        "from": [
          "The Arlington, Washington, D.C.",
          "The Arlington, Washington,dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Arlington, Washington, D.C."
      },
      {
        "from": [
          "London, England",
          "London,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "London, England"
      },
      {
        "from": [
          "Luzern, Switzerland",
          "Luzern,switzerland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luzern, Switzerland"
      },
      {
        "from": [
          "Portland, Or",
          "Portland,or."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland, Or"
      },
      {
        "from": [
          "Hotel Cochran, Washington Dc",
          "Hotel Cochran, Washington,d.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Cochran, Washington Dc"
      },
      {
        "from": [
          "South Poland, Me",
          "South Poland,me."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "South Poland, Me"
      },
      {
        "from": [
          "Quebec, Canada",
          "Quebec,canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Quebec, Canada"
      },
      {
        "from": [
          "Nassau, N.P. Bahamas",
          "Nassau,n.P.Bahamas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau, N.P. Bahamas"
      },
      {
        "from": [
          "En Route Aboard Ss Kobe Maru",
          "En Route Aboard Ss.Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss Kobe Maru"
      },
      {
        "from": [
          "San Francisco, Ca",
          "San Francisco,ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Francisco, Ca"
      },
      {
        "from": [
          "Hotel Brunswick Ny",
          "Hotel Brunswick,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Brunswick Ny"
      },
      {
        "from": [
          "Park Row Bldg. Ny",
          "Park Row Bldg.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row Bldg. Ny"
      },
      {
        "from": [
          "Hoffman House New York, Ny",
          "Hoffman House,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoffman House New York, Ny"
      },
      {
        "from": [
          "Chattanooga, Tn",
          "Chattanooga,tn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chattanooga, Tn"
      },
      {
        "from": [
          "En Route Steamer Furst Bismarck",
          "Enroute Steamer \"furst Bismarck\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Steamer Furst Bismarck"
      },
      {
        "from": [
          "Aboard U.S.M.S. St. Louis",
          "Aboard U.S.M.S.St. Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard U.S.M.S. St. Louis"
      },
      {
        "from": [
          "Waco, Tx",
          "Waco,tx"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waco, Tx"
      },
      {
        "from": [
          "Clinton County, Ny",
          "Clinton County,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clinton County, Ny"
      },
      {
        "from": [
          "Delmonico's New York",
          "Delmonico's,new York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's New York"
      },
      {
        "from": [
          "Toronto, Canada",
          "Toronto,canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Toronto, Canada"
      },
      {
        "from": [
          "R.M.S. \"etruria\"",
          "R. M. S. Etruria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"etruria\""
      },
      {
        "from": [
          "Los Angeles,ca",
          "Los Angeles, Ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Los Angeles,ca"
      },
      {
        "from": [
          "Waldorf-astoria, New York",
          "Waldorf- Astoria, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York"
      },
      {
        "from": [
          "Amsterdam, Holland ",
          "Amsterdam,holland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Amsterdam, Holland "
      },
      {
        "from": [
          "Argyle, The, Brooklyn, Ny",
          "Argyle,the,brooklyn,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Argyle, The, Brooklyn, Ny"
      },
      {
        "from": [
          "Baltimore, Md",
          "Baltimore,md"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baltimore, Md"
      },
      {
        "from": [
          "Helena, Mt",
          "Helena,mt"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Helena, Mt"
      },
      {
        "from": [
          "St. Augustine, Fl",
          "St.Augustine,fl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Augustine, Fl"
      },
      {
        "from": [
          "Union Square, Ny",
          "Union Square,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Square, Ny"
      },
      {
        "from": [
          "Philadelphia, Pa",
          "Philadelphia,pa."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia, Pa"
      },
      {
        "from": [
          "En Route Steamer Auguste Victoria",
          "Enroute Steamer \"auguste Victoria\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Steamer Auguste Victoria"
      },
      {
        "from": [
          "Waldorf-astoria Hotel, New York, Ny",
          "Waldorf Astoria Hotel, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria Hotel, New York, Ny"
      },
      {
        "from": [
          "En Route Aboard S.S. Southwark",
          "Enroute Aboard S.S. Southwark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Southwark"
      },
      {
        "from": [
          "New York, Ny",
          "New York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York, Ny"
      },
      {
        "from": [
          "137 E. Madison St. Chicago, Ill.",
          "137 E. Madison St.,chicago,ill."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "137 E. Madison St. Chicago, Ill."
      },
      {
        "from": [
          "Broadway, Ny",
          "Broadway,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway, Ny"
      },
      {
        "from": [
          "St.Louis Club, St.Louis,mo.",
          "St. Louis Club, St. Louis, Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Louis Club, St.Louis,mo."
      },
      {
        "from": [
          "57 Broad St. Ny",
          "57 Broad St.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 Broad St. Ny"
      },
      {
        "from": [
          "Chattanooga,tenn.",
          "Chattanooga, Tenn."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chattanooga,tenn."
      },
      {
        "from": [
          "Boston, Ma",
          "Boston,ma."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston, Ma"
      },
      {
        "from": [
          "Steamship Kaiser Wilhelm Der Grosse",
          "Steamship Kaiser Wilhelm Der Grosser"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Steamship Kaiser Wilhelm Der Grosse"
      },
      {
        "from": [
          "Windsor Hotel,ny",
          "Windsor Hotel, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Windsor Hotel,ny"
      },
      {
        "from": [
          "Murray Hill Hotel,ny",
          "Murray Hill Hotel Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Murray Hill Hotel,ny"
      },
      {
        "from": [
          "Cecil Hotel, London, England",
          "Cecil Hotel,london,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cecil Hotel, London, England"
      },
      {
        "from": [
          "Springfield,mass.",
          "Springfield, Mass."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Springfield,mass."
      },
      {
        "from": [
          "Albany, Ny",
          "Albany,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albany, Ny"
      },
      {
        "from": [
          "Denver, Colo.",
          "Denver,colo."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Denver, Colo."
      },
      {
        "from": [
          "Auditorium, Chicago, Il",
          "Auditorium,chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium, Chicago, Il"
      },
      {
        "from": [
          "Virginia Beach, Va",
          "Virginia Beach,va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Virginia Beach, Va"
      },
      {
        "from": [
          "Delmonico's Ny",
          "Delmonico's,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's Ny"
      },
      {
        "from": [
          "Palace Hotel, Denver, Col",
          "Palace Hoteldenver, Col"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel, Denver, Col"
      },
      {
        "from": [
          "St. Petersburg,russia",
          "St. Petersburg Russia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Petersburg,russia"
      },
      {
        "from": [
          "Columbus, Ohio",
          "Columbus,ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Columbus, Ohio"
      },
      {
        "from": [
          "Delmonico, New York, Ny",
          "Delmonico,new York Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico, New York, Ny"
      },
      {
        "from": [
          "Naples Italy",
          "Naples,italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Naples Italy"
      },
      {
        "from": [
          "Union League Philadelphia Pa",
          "Union League,philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League Philadelphia Pa"
      },
      {
        "from": [
          "Hoffman House, Madison Square, Ny",
          "Hoffman House,madison Square,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoffman House, Madison Square, Ny"
      },
      {
        "from": [
          "Tremont Temple, Boston, Mass.",
          "Tremont Temple,boston Mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tremont Temple, Boston, Mass."
      },
      {
        "from": [
          "Deeming Hall, Ithaca, Ny",
          "Deeming Hall,ithaca,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Deeming Hall, Ithaca, Ny"
      },
      {
        "from": [
          "Lincoln Club {brooklyn, Ny}",
          "Lincoln Club,brooklyn,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lincoln Club {brooklyn, Ny}"
      },
      {
        "from": [
          "Washington, Dc",
          "Washington,d.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washington, Dc"
      },
      {
        "from": [
          "Tokyo, Japan",
          "Tokyo,japan"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tokyo, Japan"
      },
      {
        "from": [
          "En Route Aboard Ss.Kohe Maru",
          "En Route Aboard Ss. Kohe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss.Kohe Maru"
      },
      {
        "from": [
          "Brooklyn, Ny",
          "Brooklyn,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brooklyn, Ny"
      },
      {
        "from": [
          "Fargo, North Dakota",
          "Fargo,north Dakota"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fargo, North Dakota"
      },
      {
        "from": [
          "Steamship North West",
          "Steamship Northwest"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Steamship North West"
      },
      {
        "from": [
          "374 Fifth Avenue, Ny, Ny",
          "374 Fifth Avenue, Ny,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "374 Fifth Avenue, Ny, Ny"
      },
      {
        "from": [
          "Portland, Me",
          "Portland,me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland, Me"
      },
      {
        "from": [
          "Bohemian Club, San Francisco, Ca",
          "Bohemian Club, San Francisco,ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bohemian Club, San Francisco, Ca"
      },
      {
        "from": [
          "St. Nicholas Hotel, Cincinnati, Oh",
          "St.Nicholas Hotel, Cincinnati, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Nicholas Hotel, Cincinnati, Oh"
      },
      {
        "from": [
          "Bergen, Norway",
          "Bergen,norway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bergen, Norway"
      },
      {
        "from": [
          "The Cochran, Washington, Dc",
          "The Cochran, Washington,d.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cochran, Washington, Dc"
      },
      {
        "from": [
          "Arcanum Hall,elizabeth Nj",
          "Arcanum Hall,elizabeth,nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Arcanum Hall,elizabeth Nj"
      },
      {
        "from": [
          "En Route Aboard Dampfer H.H. Meier",
          "En Route Aboard Dampfer H.H.Meier"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Dampfer H.H. Meier"
      },
      {
        "from": [
          "Young's Hotel, Boston, Ma",
          "Youngs Hotel,boston,ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Young's Hotel, Boston, Ma"
      },
      {
        "from": [
          "Atlantic City, Nj",
          "Atlantic City,nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Atlantic City, Nj"
      },
      {
        "from": [
          "Berlin, Germany",
          "Berlin,germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Berlin, Germany"
      },
      {
        "from": [
          "The Walnut Rooms, The Grand Hotel, Trafalgar Square, London, England",
          "The Walnut Rooms The Grand Hotel, Trafalgar Square, London,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Walnut Rooms, The Grand Hotel, Trafalgar Square, London, England"
      },
      {
        "from": [
          "Tampa, Fl",
          "Tampa,fl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa, Fl"
      },
      {
        "from": [
          "En Route Aboard Ss. Kinshin Maru",
          "En Route Aboard Ss.Kinshin Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss. Kinshin Maru"
      },
      {
        "from": [
          "Altoona, Pa",
          "Altoona,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Altoona, Pa"
      },
      {
        "from": [
          "Grand Hotel, Melbourne",
          "Grand Hotel,melbourne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel, Melbourne"
      },
      {
        "from": [
          "Saratoga Springs, Ny",
          "Saratoga Springs,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saratoga Springs, Ny"
      },
      {
        "from": [
          "Aboard S S Vaderland",
          "Aboard S.S. Vaderland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard S S Vaderland"
      },
      {
        "from": [
          "Miami Biscayne Bay, Fl",
          "Miami Biscayne Bay,fl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miami Biscayne Bay, Fl"
      },
      {
        "from": [
          "Dwlmonico's Ny",
          "Dwlmonico's,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dwlmonico's Ny"
      },
      {
        "from": [
          "West End Hotel, New Orleans, La",
          "West End Hotel, New Orleans,la."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "West End Hotel, New Orleans, La"
      },
      {
        "from": [
          "Shanley's, Ny",
          "Shanley's,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shanley's, Ny"
      },
      {
        "from": [
          "Palais Royal - Christiania,norway",
          "Palais Royal, Christiania, Norway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palais Royal - Christiania,norway"
      },
      {
        "from": [
          "Manila, P.I.",
          "Manila,p.I."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manila, P.I."
      },
      {
        "from": [
          "Albany Club Albany,ny",
          "Albany Club, Albany, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albany Club Albany,ny"
      },
      {
        "from": [
          "Pinehurst,n.C.",
          "Pinehurst, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pinehurst,n.C."
      },
      {
        "from": [
          "Hotel St. George, Nyack, Ny",
          "Hotel St. George,nyack,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. George, Nyack, Ny"
      },
      {
        "from": [
          "Buffalo, Ny",
          "Buffalo,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Buffalo, Ny"
      },
      {
        "from": [
          "Rome, Italy",
          "Rome,italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rome, Italy"
      },
      {
        "from": [
          "383 6th Ave.,1212 Bway.,& 1476 Bway. Ny",
          "383 6th Ave.,1476 Bway.,1212 Bway., Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "383 6th Ave.,1212 Bway.,& 1476 Bway. Ny"
      },
      {
        "from": [
          "Cincinnati, Oh",
          "Cincinnati,oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati, Oh"
      },
      {
        "from": [
          "Cataract House, Niagara Falls, Ny",
          "Cataract House,niagara Falls,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cataract House, Niagara Falls, Ny"
      },
      {
        "from": [
          "Providence, Ri",
          "Providence,ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Providence, Ri"
      },
      {
        "from": [
          "En Route S.S.Vaderland",
          "En Route S.S Vaderland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S.Vaderland"
      },
      {
        "from": [
          "Tampa, Florida",
          "Tampa,florida"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa, Florida"
      },
      {
        "from": [
          "En Route S.S.\"barbarossa\"",
          "En Route S.S \"barbarossa\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S.\"barbarossa\""
      },
      {
        "from": [
          "Melbourne, Australia",
          "Melbourne,australia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Melbourne, Australia"
      },
      {
        "from": [
          "Montreal Canada",
          "Montreal,canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Montreal Canada"
      },
      {
        "from": [
          "Sixty-sixth Street & Broadway, New York, Ny",
          "Sixty Sixth Street & Broadway, New York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sixty-sixth Street & Broadway, New York, Ny"
      },
      {
        "from": [
          "Rector's ,ny",
          "Rector's,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rector's ,ny"
      },
      {
        "from": [
          "Long Beach, L.I, Ny",
          "Long Beach,l.I.,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Long Beach, L.I, Ny"
      },
      {
        "from": [
          "Belmar,nj",
          "Belmar, Nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Belmar,nj"
      },
      {
        "from": [
          "En Route S.S. Zeeland",
          "En Route S.S.Zeeland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S. Zeeland"
      },
      {
        "from": [
          "Hamburg, Germany",
          "Hamburg,germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg, Germany"
      },
      {
        "from": [
          "Baker City, Oregon",
          "Baker City,oregon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baker City, Oregon"
      },
      {
        "from": [
          "Paris,france",
          "Paris, France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paris,france"
      },
      {
        "from": [
          "\"st. Louis\"",
          "\"st.Louis\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"st. Louis\""
      },
      {
        "from": [
          "Niagara Falls, Ny",
          "Niagara Falls,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Niagara Falls, Ny"
      },
      {
        "from": [
          "Hotel Victory, Put-in-bay-island, Lake Erie, Oh.",
          "Hotel Victory,put-in-bay Island,lake Erie,oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Victory, Put-in-bay-island, Lake Erie, Oh."
      },
      {
        "from": [
          "Park Row Building New York,ny",
          "Park Row Building, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row Building New York,ny"
      },
      {
        "from": [
          "R.M.S. Rotterdam",
          "R.M.S.Rotterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Rotterdam"
      },
      {
        "from": [
          "Delmonico,ny",
          "Delmonico Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico,ny"
      },
      {
        "from": [
          "New York City, Ny",
          "New York City,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York City, Ny"
      },
      {
        "from": [
          "Union Square, New York, Ny",
          "Union Square,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Square, New York, Ny"
      },
      {
        "from": [
          "The Bourse, Philadelphia Pa",
          "The Bourse,philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Bourse, Philadelphia Pa"
      },
      {
        "from": [
          "Parker House, Boston, Ma",
          "Parker House,boston,ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House, Boston, Ma"
      },
      {
        "from": [
          "117 West 34th Street,new York,ny",
          "117west 34th Street,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "117 West 34th Street,new York,ny"
      },
      {
        "from": [
          "Palm Beach, Fl",
          "Palm Beach,fl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palm Beach, Fl"
      },
      {
        "from": [
          "Hotel Savoy, Ny",
          "Hotel Savoy,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy, Ny"
      },
      {
        "from": [
          "Krueger Auditorium Newark Nj",
          "Krueger Auditorium,newarknj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Krueger Auditorium Newark Nj"
      },
      {
        "from": [
          "Ss Westernland",
          "S.S.Westernland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Westernland"
      },
      {
        "from": [
          "Cleveland, Oh",
          "Cleveland,oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland, Oh"
      },
      {
        "from": [
          "En Route Aboard S.S. Westernland",
          "Enroute Aboard S.S. Westernland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Westernland"
      },
      {
        "from": [
          "Put-in-bay-island, Lake Erie, Oh",
          "Put-in-bay Island, Lake Erie, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Put-in-bay-island, Lake Erie, Oh"
      },
      {
        "from": [
          "Munich, Germany",
          "Munich,germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Munich, Germany"
      },
      {
        "from": [
          "Boston,mass",
          "Boston, Mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston,mass"
      },
      {
        "from": [
          "Waldorf Ny",
          "Waldorfny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Ny"
      },
      {
        "from": [
          "Revere House, Boston,mass",
          "Revere House,boston,mass."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Revere House, Boston,mass"
      },
      {
        "from": [
          "Milwaukee, Wi",
          "Milwaukee,wi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Milwaukee, Wi"
      },
      {
        "from": [
          "Auditorium Hotel, Chicago, Il",
          "Auditorium Hotel,chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium Hotel, Chicago, Il"
      },
      {
        "from": [
          "Nassau,bahamas",
          "Nassau, Bahamas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau,bahamas"
      },
      {
        "from": [
          "Havana, Cuba",
          "Havana,cuba"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Havana, Cuba"
      },
      {
        "from": [
          "Ellicott Square, Buffalo, Ny",
          "Ellicott Square,buffalo,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ellicott Square, Buffalo, Ny"
      },
      {
        "from": [
          "En Route Aboard Express Steamer Auguste Victoria",
          "Enroute Aboard Express-steamer Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Express Steamer Auguste Victoria"
      },
      {
        "from": [
          "Ellicott Club, Buffalo, Ny",
          "Ellicott Club,buffalo,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ellicott Club, Buffalo, Ny"
      },
      {
        "from": [
          "Chicago, Il",
          "Chicago,il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Il"
      },
      {
        "from": [
          "Hotel Manhattan, Ny",
          "Hotel Manhattan,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan, Ny"
      },
      {
        "from": [
          "Queen City Club, Cincinnati ,ohio",
          "Queen City Club, Cincinnati,ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Queen City Club, Cincinnati ,ohio"
      },
      {
        "from": [
          "Hotel Vendome, Boston, Ma",
          "Hotel Vendome,boston.Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome, Boston, Ma"
      },
      {
        "from": [
          "Asheville,nc",
          "Asheville, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Asheville,nc"
      },
      {
        "from": [
          "Logan House, Altoona, Pa",
          "Logan House,altoona,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Logan House, Altoona, Pa"
      },
      {
        "from": [
          "Malone, Ny",
          "Malone,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Malone, Ny"
      },
      {
        "from": [
          "Hotel Vendome Boston, Mass",
          "Hotel Vendome, Boston,mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome Boston, Mass"
      },
      {
        "from": [
          "Fargo, Nd",
          "Fargo,nd"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fargo, Nd"
      },
      {
        "from": [
          "Magdeburg, Germany",
          "Magdeburg,germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Magdeburg, Germany"
      },
      {
        "from": [
          "Hotel Walton,philadelphia,pa",
          "Hotel Walton, Philadelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Walton,philadelphia,pa"
      },
      {
        "from": [
          "Watson House, Bablon, L.I., N.Y.",
          "Watson House,bablon, L.I. N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Watson House, Bablon, L.I., N.Y."
      },
      {
        "from": [
          "Mobile Al",
          "Mobile,al."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mobile Al"
      },
      {
        "from": [
          "Tampa,fla.",
          "Tampa, Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa,fla."
      },
      {
        "from": [
          "American Inn, Portland Or",
          "American Inn, Portland,or"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Inn, Portland Or"
      },
      {
        "from": [
          "Lake George,ny",
          "Lake George, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lake George,ny"
      },
      {
        "from": [
          "En Route",
          "Enroute"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route"
      },
      {
        "from": [
          "Whitehall Rooms, The Hotel Metropole, London England",
          "Whitehall Rooms,the Hotel Metropole, London,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Whitehall Rooms, The Hotel Metropole, London England"
      },
      {
        "from": [
          "St. Charles Hotel, New Orleans La",
          "St. Charles Hotel,new Orleans,la"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel, New Orleans La"
      },
      {
        "from": [
          "Parker House, Mass",
          "Parker House,mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House, Mass"
      },
      {
        "from": [
          "Brunswick Me",
          "Brunswick,me."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brunswick Me"
      },
      {
        "from": [
          "Colorado Springs, Co",
          "Colorado Springs,colo."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colorado Springs, Co"
      },
      {
        "from": [
          "Faneuil Hall, Boston, Ma",
          "Faneuil Hall,boston,ma."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Faneuil Hall, Boston, Ma"
      },
      {
        "from": [
          "Detroit, Mi",
          "Detroit,mi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Detroit, Mi"
      }
    ],
    "description": "Mass edit cells in column place_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "S.S. Zeeland",
          "S.S. Zealandia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Zeeland"
      },
      {
        "from": [
          "Tampa, Fl",
          "Tampa,fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa, Fl"
      },
      {
        "from": [
          "Jahreszeiten Eck",
          "Jareszeiten Eck"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jahreszeiten Eck"
      },
      {
        "from": [
          "Grand Pacific Hotel, Chicago, Il",
          "Grand Pacific Hotel,chicago,ill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Pacific Hotel, Chicago, Il"
      },
      {
        "from": [
          "Palais Royal - Christiania,norway",
          "Palais Royal, Christiana, Norway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palais Royal - Christiania,norway"
      },
      {
        "from": [
          "S.S. \"southwark\"",
          "S.S. Southwork"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Southwork"
      },
      {
        "from": [
          "Young's Hotel, Boston, Ma",
          "Young's Hotel,boston"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Young's Hotel, Boston, Ma"
      },
      {
        "from": [
          "Bleecker Street, New York",
          "149 Bleecker Street, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bleecker Street, New York"
      },
      {
        "from": [
          "Frankfurt, Germany",
          "Frankfort, Germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frankfurt, Germany"
      },
      {
        "from": [
          "St. Nicholas Hotel, Cincinnati, Oh",
          "St. Nicholas Hotel,cincinnati,ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Nicholas Hotel, Cincinnati, Oh"
      },
      {
        "from": [
          "En Route Aboard Ss Kobe Maru",
          "En Route Aboard Ss.K0be Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss Kobe Maru"
      },
      {
        "from": [
          "On Board S.S. 'kronprinzessin Cecilie'",
          "On Board S.S.Kronprinzessin Cecile"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board S.S.Kronprinzessin Cecile"
      },
      {
        "from": [
          "Ss City Of Rio De Janeiro",
          "Ss City Of Rio De Janerio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss City Of Rio De Janeiro"
      },
      {
        "from": [
          "Gibraltar, Spain",
          "Gibralter, Spain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gibraltar, Spain"
      },
      {
        "from": [
          "38th St. & 6th Ave. Ny",
          "59th St.& 5th Ave.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "38th St. & 6th Ave. Ny"
      },
      {
        "from": [
          "En Route Aboard Schnelldampfer Express Steamer Auguste Victoria",
          "En Route Aboard Scnelldampfer Express Steamer Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Schnelldampfer Express Steamer Auguste Victoria"
      },
      {
        "from": [
          "137 E. Madison St. Chicago, Ill.",
          "137 E. Madison St. Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "137 E. Madison St. Chicago, Ill."
      },
      {
        "from": [
          "Aboard Kronprinzessin Cecilie",
          "Aboard Kronprinsessin Cecilie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Kronprinzessin Cecilie"
      },
      {
        "from": [
          "Aboard Paquebot La Lorraine",
          "Aboard Paquebot La Loraine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Paquebot La Lorraine"
      },
      {
        "from": [
          "Coronado Beach, Ca",
          "Coronada Beach, Ca."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coronado Beach, Ca"
      },
      {
        "from": [
          "1289 B'way Ny",
          "1289-1291 B'way Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1289 B'way Ny"
      },
      {
        "from": [
          "Ss Konigin Luise",
          "Ss \"konigen Luise\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Konigin Luise"
      },
      {
        "from": [
          "Ss Furst Bismarck",
          "Ss Furst Bismark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Furst Bismarck"
      },
      {
        "from": [
          "En Route Steamer August Victoria",
          "En Route Steamer Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Steamer August Victoria"
      },
      {
        "from": [
          "En Route Aboard S.S. Zealandia",
          "En Route Aboard S.S.Zeeland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Zealandia"
      },
      {
        "from": [
          "En Route Aboard Sierra",
          "En Route Aboard Ss Sierra"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Sierra"
      }
    ],
    "description": "Mass edit cells in column place_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Delmonico's Ny",
          "Dwlmonico's Ny",
          "Delmoico's Ny",
          "Delmonico's Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's Ny"
      },
      {
        "from": [
          "The Waldorf-astoria",
          "The Waldof-astoria",
          "The Waldorf-astora"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf-astoria"
      },
      {
        "from": [
          "En Route",
          "Rn Route",
          "On Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route"
      },
      {
        "from": [
          "\"konigen Luise\" At Sea",
          "\"konigin Luise\" At Sea",
          "\"konigin Luse\" At Sea"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"konigen Luise\" At Sea"
      },
      {
        "from": [
          "Delmonico's Ny",
          "Dwlmonico's Ny",
          "Delmonico's Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's Ny"
      },
      {
        "from": [
          "\"konigen Luise\" At Sea",
          "\"konigen Louise\" At Sea",
          "\"konigin Luise\" At Sea"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"konigen Luise\" At Sea"
      },
      {
        "from": [
          "Hotel Stenton",
          "Hoten Stenton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Stenton"
      },
      {
        "from": [
          "Chattanooga, Tn",
          "Chattanooga, Te"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chattanooga, Tn"
      },
      {
        "from": [
          "Miami Biscayne Bay,fla.",
          "Miaami Biscayne Bay,fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miami Biscayne Bay,fla."
      },
      {
        "from": [
          "Plymouth, Ma",
          "Plymouth, Mi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plymouth, Ma"
      },
      {
        "from": [
          "En Route Aboard Furst Bismarck",
          "En Route Aboard Fust Bismarck"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Furst Bismarck"
      },
      {
        "from": [
          "Park Row, Ny",
          "Park Row, Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row, Ny"
      },
      {
        "from": [
          "Ss: Kamakura Maru",
          "Ss: Kamkura Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss: Kamakura Maru"
      },
      {
        "from": [
          "Delmonico's Ny",
          "Dwlmonico's Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's Ny"
      },
      {
        "from": [
          "The Waldorf-astoria",
          "The Waldorf-astora"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf-astoria"
      },
      {
        "from": [
          "Hoel Flanders",
          "Hotel Flanders"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Flanders"
      },
      {
        "from": [
          "New York City",
          "New York Ciy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York City"
      },
      {
        "from": [
          "New York, Ny",
          "New Yok, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York, Ny"
      },
      {
        "from": [
          "\"konigin Luise\" At Sea",
          "\"konigin Luse\" At Sea"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"konigin Luise\" At Sea"
      },
      {
        "from": [
          "Metropolitan Hotel",
          "Metopolitan Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Hotel"
      },
      {
        "from": [
          "St. Denis Hotel",
          "St. Dennis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "Postdamfer Graf Waldersee",
          "Postdampfer Graf Waldersee"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Postdamfer Graf Waldersee"
      },
      {
        "from": [
          "Hotel Gramercy Park 52 Gramercy Park North",
          "Hotel Gramercy Park 52 Gamercy Park North"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Gramercy Park 52 Gramercy Park North"
      },
      {
        "from": [
          "Schnelldampfer Daiser Wilhelm Der Grosse",
          "Schnelldampfer Kaiser Wilhelm Der Grosse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schnelldampfer Daiser Wilhelm Der Grosse"
      },
      {
        "from": [
          "Bellini",
          "Cellini"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellini"
      },
      {
        "from": [
          "On Board S.S.Amerika",
          "On Board S.S.Amerikas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board S.S.Amerika"
      },
      {
        "from": [
          "Schnelldampfer \"auguste Victoria\"",
          "Shnelldampfer \"auguste Victoria\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schnelldampfer \"auguste Victoria\""
      },
      {
        "from": [
          "Auditorium Hotel",
          "Auditorium Hoel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium Hotel"
      },
      {
        "from": [
          "\"konigen Luise\" At Sea",
          "\"konigen Louise\" At Sea"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"konigen Luise\" At Sea"
      },
      {
        "from": [
          "St.Augustine,fla.",
          "St.Aaugustine,fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Augustine,fla."
      },
      {
        "from": [
          "Gelb's Parlors, Providence, Ri",
          "Gelb's Parlors, Providence, Ro"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gelb's Parlors, Providence, Ri"
      },
      {
        "from": [
          "Delmonico's Ny",
          "Delmoico's Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's Ny"
      },
      {
        "from": [
          "Clark's Ny",
          "Clark's Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clark's Ny"
      },
      {
        "from": [
          "R.M.S. \"lucania\"",
          "R.M.S. \"luncania\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"lucania\""
      },
      {
        "from": [
          "Sunset Ogden & Shasta Routes",
          "Sunset Ogden & Shasta Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sunset Ogden & Shasta Routes"
      },
      {
        "from": [
          "En Route Aboard Ss. Kasuga",
          "En Route Aboard Ss. Kasufa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss. Kasuga"
      },
      {
        "from": [
          "Rome, Italy",
          "Rome, Itally"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rome, Italy"
      },
      {
        "from": [
          "Dampfer \"konigen Luise\"",
          "Dampfer \"konigin Luise\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dampfer \"konigen Luise\""
      },
      {
        "from": [
          "Augusta, Me",
          "August, Me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Augusta, Me"
      },
      {
        "from": [
          "Taoemina, Sicily",
          "Taormina, Sicily"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Taoemina, Sicily"
      },
      {
        "from": [
          "Vendome Hotel,ny",
          "Vendome Hotel,nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Vendome Hotel,ny"
      },
      {
        "from": [
          "Waldorf-astoria, New York",
          "Waldof-astoria, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York"
      },
      {
        "from": [
          "Chicago, Il",
          "Chcago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Il"
      },
      {
        "from": [
          "Summerville, S.C.",
          "Sommerville, S.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Summerville, S.C."
      },
      {
        "from": [
          "The Waldorf-astoria",
          "The Waldof-astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf-astoria"
      },
      {
        "from": [
          "Diner Car 372, San Francisco Overland Limited",
          "Diner Car 374, San Francisco Overland Limited"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Diner Car 372, San Francisco Overland Limited"
      },
      {
        "from": [
          "Jersey City, Nj",
          "Jersey City, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jersey City, Nj"
      },
      {
        "from": [
          "Switzerland",
          "Swiitzerland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Switzerland"
      },
      {
        "from": [
          "Fargo, Nd",
          "Fargo, Nk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fargo, Nd"
      },
      {
        "from": [
          "Watson House, Bablon, L.I., N.Y.",
          "Watson House, Babylon, L.I., N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Watson House, Bablon, L.I., N.Y."
      },
      {
        "from": [
          "Delmonico's Ny",
          "Delmonico's Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's Ny"
      },
      {
        "from": [
          "Malone, Nj",
          "Malone, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Malone, Nj"
      },
      {
        "from": [
          "Cincinnati, Oh",
          "Cincinnati, 0h"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati, Oh"
      },
      {
        "from": [
          "New York",
          "New Yok"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York"
      },
      {
        "from": [
          "Atantic Hotel, Ocean City, Md",
          "Atlantic Hotel, Ocean City, Md"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Atantic Hotel, Ocean City, Md"
      },
      {
        "from": [
          "Havana, Cuba",
          "Habana, Cuba"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Havana, Cuba"
      },
      {
        "from": [
          "Ss Kasuga",
          "Ss Kasupa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Kasuga"
      },
      {
        "from": [
          "Milan, Italy",
          "Milano, Italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Milan, Italy"
      },
      {
        "from": [
          "Philadelphia Bourse",
          "Philadephia Bourse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia Bourse"
      },
      {
        "from": [
          "En Route Aboard Schnelldampfer Express Steamer Auguste Victoria",
          "En Route Aboard Schnelldampmer Express Steamer Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Schnelldampfer Express Steamer Auguste Victoria"
      },
      {
        "from": [
          "\"konigen Luise\" At Sea",
          "\"konigin Luise\" At Sea"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"konigen Luise\" At Sea"
      }
    ],
    "description": "Mass edit cells in column place_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "\"konigen Luise\" At Sea",
          "\"konigin Luise\" At Sea"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"konigen Luise\" At Sea"
      }
    ],
    "description": "Mass edit cells in column place_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Delmonico's Ny",
          "Delmonico's",
          "Delmonico,ny",
          "Delmonico",
          "Le Delmonico"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's Ny"
      },
      {
        "from": [
          "Waldorf-astoria, New York",
          "Waldorf-astoria, New York, Ny",
          "Waldorf-astoria, The, New York, Ny",
          "The Waldorf-astoria, New York",
          "Waldorf-astoria Hotel, The, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York"
      },
      {
        "from": [
          "Waldorf-astoria, New York",
          "Waldorf-astoria, New York City",
          "Waldorf-astoria, New York, Ny",
          "Waldorf-astoria, The, New York, Ny",
          "The Waldorf-astoria, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York"
      },
      {
        "from": [
          "Waldorf-astoria, New York",
          "Waldorf-astoria, New York City",
          "Waldorf-astoria, New York, Ny",
          "The Waldorf-astoria, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York"
      },
      {
        "from": [
          "Madison Square Garden, New York City",
          "Madison Square Garden, New York, Ny",
          "Madison Sq. Garden, New York City",
          "Madison Square Garder, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Madison Square Garden, New York City"
      },
      {
        "from": [
          "Bellevue-stratford Hotel, Philadelphia, Pa",
          "The Bellevue-stratford, Philadelphia, Pa",
          "Bellevue-stratford, Philadelphia, Pa",
          "Bellevue-statford, Philadelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue-stratford Hotel, Philadelphia, Pa"
      },
      {
        "from": [
          "Waldorf-astoria, New York",
          "Waldorf-astoria, New York, Ny",
          "Waldorf-astoria, The, New York, Ny",
          "The Waldorf-astoria, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York"
      },
      {
        "from": [
          "Delmonico's",
          "Delmonico,ny",
          "Delmonico",
          "Le Delmonico"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's"
      },
      {
        "from": [
          "St. Denis Hotel New York",
          "St. Denis Hotel, New York City",
          "St. Denis Hotel, New York, Ny",
          "St. Regis Hotel, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel New York"
      },
      {
        "from": [
          "Philadelphia Bourse",
          "Bourse,philadelphia,pa",
          "Philadelphia Bourse,philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia Bourse"
      },
      {
        "from": [
          "Delmonico's, New York, Ny",
          "Delmonico's New York",
          "Delmonic0's, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's, New York, Ny"
      },
      {
        "from": [
          "Waldorf-astoria Hotel, New York, Ny",
          "Waldorf-astoria, The, New York, Ny",
          "Waldorf-astoria Hotel, The, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria Hotel, New York, Ny"
      },
      {
        "from": [
          "Delmonico's",
          "Delmonico,ny",
          "Delmonico"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's"
      },
      {
        "from": [
          "The Union League Club",
          "Union League Club",
          "The Union League"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Union League Club"
      },
      {
        "from": [
          "The Waldorf-astoria",
          "Waldorf-astoria",
          "Waldorf-astoria,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf-astoria"
      },
      {
        "from": [
          "Hotel Marlborough, New York, Ny",
          "Hotel Marlborough, New York",
          "Hotel Marlborough, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Marlborough, New York, Ny"
      },
      {
        "from": [
          "New Willard Hotel, Washington, Dc",
          "New Willard Washington, Dc",
          "New Willard Hotel, The, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Willard Hotel, Washington, Dc"
      },
      {
        "from": [
          "Waldorf-astoria, New York",
          "Waldorf-astoria, New York, Ny",
          "The Waldorf-astoria, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York"
      },
      {
        "from": [
          "Murray Hill Hotel, New York City",
          "Murray Hill Hotel, New York, Ny",
          "Murray Hill Hotel, The, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Murray Hill Hotel, New York City"
      },
      {
        "from": [
          "Auditorium Hotel, Chicago, Il",
          "Auditorium Annex Chicago, Il",
          "Auditorium Annex Hotel, Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium Hotel, Chicago, Il"
      },
      {
        "from": [
          "Madison Square, New York",
          "Madison Square, New York, Ny",
          "Madison Square, West, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Madison Square, New York"
      },
      {
        "from": [
          "Republican Club, New York",
          "Republican Club, New York City",
          "Republican Club, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Republican Club, New York"
      },
      {
        "from": [
          "Delmonico's, New York, Ny",
          "Delmonico's New York",
          "Delmonico, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico's, New York, Ny"
      },
      {
        "from": [
          "The Auditorium",
          "Auditorium Annex",
          "The Auditorium Annex"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Auditorium"
      },
      {
        "from": [
          "Portland, Or",
          "Portland, Oregon",
          "Portland,the, Portland, Oregon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland, Or"
      },
      {
        "from": [
          "Hoffman House New York, Ny",
          "Hoffman Cafe, New York",
          "Hoffman House Cafe, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoffman House New York, Ny"
      },
      {
        "from": [
          "Miami Biscayne Bay, Fl",
          "Miami Biscayne Bay,fla.",
          "Miami Bay Biscayne,fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miami Biscayne Bay, Fl"
      },
      {
        "from": [
          "The Union League Club",
          "Union League Club",
          "Union League Club Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Union League Club"
      },
      {
        "from": [
          "Waldorf-astoria, New York, Ny",
          "Waldorf-astoria, The, New York, Ny",
          "Waldorf-astoria Hotel, The, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York, Ny"
      },
      {
        "from": [
          "The Bellevue-stratford, Philadelphia, Pa",
          "Bellevue-stratford, Philadelphia, Pa",
          "Bellevue-statford, Philadelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Bellevue-stratford, Philadelphia, Pa"
      },
      {
        "from": [
          "Madison Square Garden, New York City",
          "Madison Square Garden, New York, Ny",
          "Madison Square Garder, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Madison Square Garden, New York City"
      },
      {
        "from": [
          "Madison Square Garden, New York City",
          "Madison Square Garden, New York, Ny",
          "Madison Sq. Garden, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Madison Square Garden, New York City"
      },
      {
        "from": [
          "Murray Hill Hotel,ny",
          "Murray Hill Hotel",
          "Murray Hill Hotel,the,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Murray Hill Hotel,ny"
      },
      {
        "from": [
          "66th St And Broadway,new York,ny",
          "66th Street And Broadway,new York,ny",
          "66 Street And Broadway,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66th St And Broadway,new York,ny"
      },
      {
        "from": [
          "Hoffman Cafe, New York",
          "Hoffman Cafes, New York, Ny",
          "Hoffman House Cafe, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoffman Cafe, New York"
      },
      {
        "from": [
          "San Francisco Commercial Club",
          "San Francisco Commerical Club",
          "The San Francisco Commercial Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Francisco Commercial Club"
      },
      {
        "from": [
          "Algonquin Club",
          "New Algonquin Club",
          "New Algonquin Club,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Algonquin Club"
      },
      {
        "from": [
          "Colonial Club",
          "Colonial Club Ny",
          "Colonial Club Of Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colonial Club"
      },
      {
        "from": [
          "The Bellevue, Philadelphia, Pa",
          "The Bellevue, Phladelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Bellevue, Philadelphia, Pa"
      },
      {
        "from": [
          "Murray Hill Hotel, New York, Ny",
          "Murray Hill Hotel, The, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Murray Hill Hotel, New York, Ny"
      },
      {
        "from": [
          "Union League Club",
          "Union League Club Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League Club"
      },
      {
        "from": [
          "Hotel Brunswick, New York",
          "Hotel Brunswick, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Brunswick, New York"
      },
      {
        "from": [
          "Waldorf-astoria",
          "Waldorf-astoria,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria"
      },
      {
        "from": [
          "St. Denis Hotel, New York City",
          "St. Denis Hotel, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel, New York City"
      },
      {
        "from": [
          "Waldorf-astoria, The, New York, Ny",
          "Waldorf-astoria Hotel, The, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, The, New York, Ny"
      },
      {
        "from": [
          "The Brunswick, Boston, Ma",
          "The Brunswick, Boston,mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Brunswick, Boston, Ma"
      },
      {
        "from": [
          "Schnelldampfer \"auguste Victoria\"",
          "Schnelldampfers \"august Victoria\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schnelldampfer \"auguste Victoria\""
      },
      {
        "from": [
          "Waldorf-astoria, New York",
          "Waldorf-astoria, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York"
      }
    ],
    "description": "Mass edit cells in column place_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Hotel Vendome, Boston, Ma",
          "Hotel Vendome Boston, Mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome, Boston, Ma"
      },
      {
        "from": [
          "Fifth Avenue Hotel, New York",
          "Fifth Avenue Hotel, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Avenue Hotel, New York"
      },
      {
        "from": [
          "Portland,ma",
          "Portland,maine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland,ma"
      },
      {
        "from": [
          "Sherry's, New York, Ny",
          "Sherry's, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherry's, New York, Ny"
      },
      {
        "from": [
          "Marlborough Hotel, ",
          "Marlborough Hotel, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Marlborough Hotel, "
      },
      {
        "from": [
          "Waldorf-astoria, New York, Ny",
          "Waldorf-astoria, The, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-astoria, New York, Ny"
      },
      {
        "from": [
          "Broadway & 10th Street, New York, Ny",
          "Broadway And 10th Street, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway & 10th Street, New York, Ny"
      },
      {
        "from": [
          "San Francisco, Ca",
          "San Francisco, Calif"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Francisco, Ca"
      },
      {
        "from": [
          "Chicago Beach Hotel Chicago, Il",
          "Chicago Beach Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago Beach Hotel Chicago, Il"
      },
      {
        "from": [
          "Hotel Manhattan, New York",
          "Hotel Manhattan,new York Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan, New York"
      },
      {
        "from": [
          "University Club",
          "University Club Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "University Club"
      },
      {
        "from": [
          "Aboard Ss Kobe Maru",
          "Aboard Ss Kobe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Ss Kobe Maru"
      },
      {
        "from": [
          "Mercantile Club St Louis, Mo",
          "Mercantile Club St. Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mercantile Club St Louis, Mo"
      },
      {
        "from": [
          "Murray Hill Hotel, New York, Ny",
          "Murray Hill Hotel, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Murray Hill Hotel, New York, Ny"
      },
      {
        "from": [
          "Madison Square New York City Ny",
          "New York City, Madison Square"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Madison Square New York City Ny"
      },
      {
        "from": [
          "Rauscher's, Washingon, D.C.",
          "Rauscher's, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rauscher's, Washingon, D.C."
      },
      {
        "from": [
          "Madison Square Garden",
          "Madison Square Garden Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Madison Square Garden"
      },
      {
        "from": [
          "Worcester, Ma",
          "Worcester, Mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Worcester, Ma"
      },
      {
        "from": [
          "En Route Aboard Ss. Kasuga",
          "En Route Aboard Ss Kasuga Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss. Kasuga"
      }
    ],
    "description": "Mass edit cells in column place_cluster"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "location",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "location_cluster",
    "columnInsertIndex": 17,
    "description": "Create column location_cluster at index 17 based on column location using expression grel:value"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Childs",
          "Childs'",
          "Child's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Childs"
      },
      {
        "from": [
          "Gramercy Park Hotel",
          "Hotel Gramercy Park",
          "Gramercy Park Hotel Hotel Gramercy Park"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gramercy Park Hotel"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyd, Bremen",
          "Bremen Norddeutscher Lloyd"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Riggs'",
          "Rigg's",
          "Riggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Riggs'"
      },
      {
        "from": [
          "Hotel Knickerbocker",
          "Hotel Knickerbocker ",
          "Knickerbocker Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Knickerbocker"
      },
      {
        "from": [
          "U.S.M.S.",
          "Usms",
          "U.S.M.S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S."
      },
      {
        "from": [
          "U.S.M.S. New York",
          "Usms New York",
          "U.S.M.S New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. New York"
      },
      {
        "from": [
          "Delmonicos",
          "Delmonico's",
          "Delmonicos."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos"
      },
      {
        "from": [
          "The Merchant's Club",
          "The Merchants Club",
          "The Merchants' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club"
      },
      {
        "from": [
          "Merchant's Club",
          "Merchants' Club",
          "Merchants Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Merchant's Club"
      },
      {
        "from": [
          "St. Denis Hotel",
          "Hotel St. Denis",
          "St, Denis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "Fifth Avenue Hotel",
          "Fifth Avenue Hotel ",
          "Fifth Avenue Hotel}"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Avenue Hotel"
      },
      {
        "from": [
          "Hotel Imperial",
          "Imperial Hotel",
          "Impérial Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Imperial"
      },
      {
        "from": [
          "American Medical Editor's Association",
          "American Medical Editors' Association",
          "American Medical Editors Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Medical Editor's Association"
      },
      {
        "from": [
          "Hotel Metropole",
          "Metropole Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Metropole"
      },
      {
        "from": [
          "S.S. American Shipper",
          "S.S. \"american Shipper\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. American Shipper"
      },
      {
        "from": [
          "The Merchant's Club Of Chicago",
          "The Merchants Club Of Chicago"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club Of Chicago"
      },
      {
        "from": [
          "Nordeutscher Lloyd Bremen",
          "Nordeutscher Lloyd, Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nordeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Alta Vista Hotel",
          "Alta Vista Hotel "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alta Vista Hotel"
      },
      {
        "from": [
          "Friendly Sons Of St. Patrick",
          "Friendly Sons Of St Patrick"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Friendly Sons Of St. Patrick"
      },
      {
        "from": [
          "Cie Gle Transatlantique",
          "Cie. Gle. Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cie Gle Transatlantique"
      },
      {
        "from": [
          "De L'ange Hotel",
          "Hotel De L'ange"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "De L'ange Hotel"
      },
      {
        "from": [
          "Rigg's Twentieth Street Restaurant",
          "Riggs' Twentieth Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rigg's Twentieth Street Restaurant"
      },
      {
        "from": [
          "Ancient And Honorable Artillery Co Of Massachusetts",
          "Ancient And Honorable Artillery Co. Of Massachusetts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ancient And Honorable Artillery Co Of Massachusetts"
      },
      {
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard Hotel"
      },
      {
        "from": [
          "St. Francis Hotel",
          "Hotel St. Francis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Francis Hotel"
      },
      {
        "from": [
          "Society Of Colonial Wars In The State Of New York",
          "Society Of The Society Of Colonial Wars In The State Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Society Of Colonial Wars In The State Of New York"
      },
      {
        "from": [
          "Compagnie Générale Transatlantique",
          "Compagnie Generale Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compagnie Générale Transatlantique"
      },
      {
        "from": [
          "Muhlenkamper Fahrhaus",
          "Mühlenkamper Fährhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Muhlenkamper Fahrhaus"
      },
      {
        "from": [
          "Del Prado Hotel",
          "Hotel Del Prado"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Del Prado Hotel"
      },
      {
        "from": [
          "Childs' Lunch Rooms",
          "Child's Lunch Rooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Childs' Lunch Rooms"
      },
      {
        "from": [
          "Engineers Club",
          "Engineers' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Engineers Club"
      },
      {
        "from": [
          "Hotel Manhattan",
          "Manhattan Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan"
      },
      {
        "from": [
          "Hotel Victory",
          "Victory Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Victory"
      },
      {
        "from": [
          " Club",
          "Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " Club"
      },
      {
        "from": [
          "Paquebot Liberté\"\"",
          "Paquebot Liberte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot Liberté\"\""
      },
      {
        "from": [
          "Hotel Grunewald",
          "Grunewald Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Grunewald"
      },
      {
        "from": [
          "Fairmont Hotel",
          "Hotel Fairmont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fairmont Hotel"
      },
      {
        "from": [
          "Hotel Alcazar",
          "Alcazar Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Alcazar"
      },
      {
        "from": [
          "Cafe Savarin",
          "Café Savarin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Savarin"
      },
      {
        "from": [
          "St. Nicholas Hotel",
          "Hotel St. Nicholas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Nicholas Hotel"
      },
      {
        "from": [
          "Hotel Colorado",
          "Colorado Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Colorado"
      },
      {
        "from": [
          "Cosmopolitan Hotel",
          "Cosmopolitan... Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cosmopolitan Hotel"
      },
      {
        "from": [
          "Hotel Colombo",
          "Colombo Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Colombo"
      },
      {
        "from": [
          "Palace Hotel",
          "Palace Hôtel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel"
      },
      {
        "from": [
          "Ancient Accepted Scottish Rite",
          "Ancient & Accepted Scottish Rite"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ancient Accepted Scottish Rite"
      },
      {
        "from": [
          "Pirate's House",
          "Pirates' House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pirate's House"
      },
      {
        "from": [
          "Michigan Society Of The Sons Of The American Revolution",
          "Michigan Society Sons Of The American Revolution"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Michigan Society Of The Sons Of The American Revolution"
      },
      {
        "from": [
          "Merchant's Club Of Boston",
          "Merchants' Club Of Boston"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Merchant's Club Of Boston"
      },
      {
        "from": [
          "Second Panel Sheriff's Jury",
          "Sheriff's Jury Second Panel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Second Panel Sheriff's Jury"
      },
      {
        "from": [
          "Elks Club House",
          "Elks' Club House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Elks Club House"
      },
      {
        "from": [
          "Hotel Du Musee",
          "Hotel Du Musee'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Du Musee"
      },
      {
        "from": [
          "Tavern On The Green",
          "The Tavern On The Green"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tavern On The Green"
      },
      {
        "from": [
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant",
          "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant"
      },
      {
        "from": [
          "Minot Hotel",
          "Hotel Minot"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Minot Hotel"
      },
      {
        "from": [
          "Restaurant Andor Location Not Given.",
          "Restaurant Andor Location Not Given"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Andor Location Not Given."
      },
      {
        "from": [
          "Kempinski Restaurant",
          "Restaurant Kempinski"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Kempinski Restaurant"
      },
      {
        "from": [
          "S.S New Amsterdam",
          "S.S. New Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S New Amsterdam"
      },
      {
        "from": [
          "Sherry's",
          "Sherrys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherry's"
      },
      {
        "from": [
          "Ambassador Hotel",
          "Hotel Ambassador"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ambassador Hotel"
      },
      {
        "from": [
          "Bristol Hotel",
          "Hotel Bristol"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bristol Hotel"
      },
      {
        "from": [
          "Schwarzwalder's Natur Weinhaus",
          "Schwarzwalders Natur Weinhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schwarzwalder's Natur Weinhaus"
      },
      {
        "from": [
          "The Commodore Hotel",
          "The Hotel Commodore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Commodore Hotel"
      },
      {
        "from": [
          "Algonquin Hotel",
          "Hotel Algonquin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Algonquin Hotel"
      },
      {
        "from": [
          "Hotel Worthy",
          "Worthy Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Worthy"
      },
      {
        "from": [
          "Hotel Majestic",
          "Majestic Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Majestic"
      },
      {
        "from": [
          "Willard's Hotel",
          "Willards Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Willard's Hotel"
      },
      {
        "from": [
          "Grand Ballroom Of The Hotel Plaza",
          "The Grand Ballroom Of The Hotel Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Ballroom Of The Hotel Plaza"
      },
      {
        "from": [
          "Hotel Astor",
          "Astor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Astor"
      },
      {
        "from": [
          "Hotel Chamberlin",
          "Chamberlin Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Chamberlin"
      },
      {
        "from": [
          "Grocers Hall",
          "Grocers' Hall"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grocers Hall"
      },
      {
        "from": [
          "Continental Hotel",
          "Hotel Continental"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Continental Hotel"
      },
      {
        "from": [
          "Colonial Hotel",
          "Hotel Colonial"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colonial Hotel"
      },
      {
        "from": [
          "Hotel St. Regis",
          "St. Regis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. Regis"
      },
      {
        "from": [
          "Hotel Netherland",
          "Netherland Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Netherland"
      },
      {
        "from": [
          "St.Regis Hotel",
          "Hotel St.Regis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Regis Hotel"
      },
      {
        "from": [
          "St. Charles Hotel",
          "St Charles Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel"
      },
      {
        "from": [
          "Hotel Velvet",
          "Velvet Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Velvet"
      },
      {
        "from": [
          "Society Of Sons Of The Revolution In The State Of Missouri",
          "Society Sons Of The Revolution In The State Of Missouri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Society Of Sons Of The Revolution In The State Of Missouri"
      },
      {
        "from": [
          "Empire Hotel",
          "Hotel Empire"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Empire Hotel"
      },
      {
        "from": [
          "Reuben's",
          "Reuben's."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reuben's"
      },
      {
        "from": [
          "Paquebot France\"\"",
          "Paquebot France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot France\"\""
      },
      {
        "from": [
          "Royal Palm Hotel",
          "Hotel Royal Palm"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Royal Palm Hotel"
      },
      {
        "from": [
          "George Washington Hotel",
          "Hotel George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "George Washington Hotel"
      },
      {
        "from": [
          "R.G.",
          "Rg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.G."
      },
      {
        "from": [
          "Columbia Hotel",
          "Hotel Columbia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Columbia Hotel"
      },
      {
        "from": [
          "R.M.S. Oceanic",
          "Rms Oceanic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Oceanic"
      },
      {
        "from": [
          "New Grand Hotel",
          "Grand New Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Grand Hotel"
      },
      {
        "from": [
          "The Hotel Plaza",
          "The Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Hotel Plaza"
      },
      {
        "from": [
          "Cafe De Paris",
          "Café De Paris"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe De Paris"
      },
      {
        "from": [
          "Xiii Club",
          "Club Xiii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Xiii Club"
      },
      {
        "from": [
          "Place Viger Hotel",
          "Hotel Place Viger"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Place Viger Hotel"
      },
      {
        "from": [
          "Hotel Lafayette",
          "Lafayette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Lafayette"
      },
      {
        "from": [
          "Empire State Society Of Sons Of The American Revolution",
          "Empire State Society Sons Of The American Revolution"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Empire State Society Of Sons Of The American Revolution"
      },
      {
        "from": [
          "Hotel Pennsylvania",
          "Pennsylvania Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pennsylvania"
      },
      {
        "from": [
          "Hotel Savoy",
          "Savoy Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy"
      },
      {
        "from": [
          "Hotel Dennis",
          "Dennis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Dennis"
      },
      {
        "from": [
          "R.M.S. Parthia",
          "R.M.S. \"parthia\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Parthia"
      },
      {
        "from": [
          "Café Lafayette",
          "Cafe Lafayette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café Lafayette"
      },
      {
        "from": [
          "Mouquin Restaurant And Wine Co",
          "Mouquin Restaurant And Wine Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mouquin Restaurant And Wine Co"
      },
      {
        "from": [
          "Imperial",
          "Imperial "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial"
      },
      {
        "from": [
          "S.S. Minnetonka",
          "S.S. \"minnetonka\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Minnetonka"
      },
      {
        "from": [
          "Hotel Commodore",
          "Commodore Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Commodore"
      },
      {
        "from": [
          "Usms St Louis",
          "U.S.M.S. St. Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Usms St Louis"
      },
      {
        "from": [
          "Hotel Winthrop",
          "Winthrop Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Winthrop"
      },
      {
        "from": [
          "Meyer's Hotel",
          "Meyers Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Meyer's Hotel"
      },
      {
        "from": [
          "Hotel Phonix",
          "Phonix Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Phonix"
      },
      {
        "from": [
          "Hotel Biltmore",
          "Biltmore Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Biltmore"
      },
      {
        "from": [
          "Hotel Jefferson",
          "Jefferson Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Jefferson"
      },
      {
        "from": [
          "Smith & Mcnell's",
          "Smith & Mcnells"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mcnell's"
      },
      {
        "from": [
          "Hotel D'angleterre",
          "D'angleterre Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel D'angleterre"
      },
      {
        "from": [
          "R.M.S. \"queen Mary\"\"\"",
          "R.M.S. Queen Mary\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"queen Mary\"\"\""
      },
      {
        "from": [
          "Claremont Hotel",
          "Hotel Claremont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Claremont Hotel"
      },
      {
        "from": [
          "Hotel Del Coronado",
          "Del Coronado Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Del Coronado"
      },
      {
        "from": [
          "Cafe Boulevard",
          "Café Boulevard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Boulevard"
      },
      {
        "from": [
          "Hotel Champlain",
          "Champlain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Champlain"
      },
      {
        "from": [
          "R.M.S. Mauretania\"\"",
          "R.M.S. Mauretania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Mauretania\"\""
      },
      {
        "from": [
          "Met-life Building",
          "Metlife Building"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Met-life Building"
      },
      {
        "from": [
          "S.S. \"frederik Viii\"",
          "S.S. Frederik Viii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. \"frederik Viii\""
      },
      {
        "from": [
          "Hotel Eastman",
          "Eastman Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Eastman"
      },
      {
        "from": [
          "Ballroom, The Plaza",
          "The Plaza Ballroom"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ballroom, The Plaza"
      },
      {
        "from": [
          "Menzie's Hotel",
          "Menzies Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Menzie's Hotel"
      },
      {
        "from": [
          "American Bankers Association",
          "American Bankers' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Bankers Association"
      },
      {
        "from": [
          "Brevoort Restaurant",
          "Restaurant Brevoort"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brevoort Restaurant"
      },
      {
        "from": [
          "Promenade Café",
          "Cafe Promenade"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Promenade Café"
      },
      {
        "from": [
          "S.S. \"ile De France\"\"\"",
          "S.S. Ile De France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. \"ile De France\"\"\""
      },
      {
        "from": [
          "Master Printers' Association",
          "Master Printers Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Master Printers' Association"
      },
      {
        "from": [
          "Restaurant Mayan",
          "Mayan Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Mayan"
      },
      {
        "from": [
          "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota",
          "Military Order Of The Loyal Legion Of The United States. Commandery Of The State Of Minnesota"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota"
      },
      {
        "from": [
          "Castleton Hotel",
          "Hotel Castleton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Castleton Hotel"
      },
      {
        "from": [
          "Adams' Restaurant",
          "Adam's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adams' Restaurant"
      },
      {
        "from": [
          "New England Society In The City Of New York",
          "The New England Society In The City Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Society In The City Of New York"
      },
      {
        "from": [
          "Grenoble Hotel",
          "Hotel Grenoble"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grenoble Hotel"
      },
      {
        "from": [
          "Penn Rr Pullman Dining Car Service",
          "Penn. Rr Pullman Dining Car Service"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Penn Rr Pullman Dining Car Service"
      },
      {
        "from": [
          "Santa Fe Route",
          "Santa Fe' Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Santa Fe Route"
      },
      {
        "from": [
          "Alpha Kappa Kappa",
          "Kappa Alpha"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alpha Kappa Kappa"
      },
      {
        "from": [
          "National Cooper's Association",
          "National Coopers Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "National Cooper's Association"
      },
      {
        "from": [
          "Windsor Hotel",
          "Hotel Windsor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Windsor Hotel"
      },
      {
        "from": [
          "Hotel National",
          "National Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel National"
      },
      {
        "from": [
          "Hotel Marie Antoinette",
          "Marie Antoinette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Marie Antoinette"
      },
      {
        "from": [
          "Hotel Quisisana",
          "Quisisana Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Quisisana"
      },
      {
        "from": [
          "New York Central System, Boston & Albany Railroad",
          "Boston & Albany Railroad , New York Central System"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central System, Boston & Albany Railroad"
      },
      {
        "from": [
          "Copley Plaza Hotel",
          "Hotel Copley Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza Hotel"
      },
      {
        "from": [
          "Albany Zouave Cadets Old Guard",
          "Old Guard Albany Zouave Cadets"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albany Zouave Cadets Old Guard"
      },
      {
        "from": [
          "New York Central & Hudson River R.R.",
          "New York Central & Hudson River R.R.."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central & Hudson River R.R."
      },
      {
        "from": [
          "St. George's Society",
          "St. Georges Society"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George's Society"
      },
      {
        "from": [
          "San Remo Hotel",
          "Hotel San Remo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Remo Hotel"
      },
      {
        "from": [
          "Shanley's",
          "Shanleys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shanley's"
      },
      {
        "from": [
          "Fraunces' Tavern",
          "Fraunces Tavern"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fraunces' Tavern"
      },
      {
        "from": [
          "Hotel St. George",
          "St. George Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. George"
      },
      {
        "from": [
          "Grand Hotel Royal",
          "Royal Grand Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel Royal"
      },
      {
        "from": [
          "Associated Pioneers Of The Territorial Days Of California",
          "The Associated Pioneers Of The Territorial Days Of California"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Associated Pioneers Of The Territorial Days Of California"
      },
      {
        "from": [
          "Hotel Plaza",
          "Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Plaza"
      },
      {
        "from": [
          "York Hotel",
          "Hotel York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "York Hotel"
      },
      {
        "from": [
          "Hotel Royal",
          "Royal Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Royal"
      },
      {
        "from": [
          "Hotel Vendome",
          "Vendome Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome"
      },
      {
        "from": [
          "Cie Transatlantique",
          "Cie Cie Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cie Transatlantique"
      },
      {
        "from": [
          "U.S. Army Subsistence Dept.",
          "Us Army Subsistence Dept."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S. Army Subsistence Dept."
      },
      {
        "from": [
          "Hotel Martinique",
          "Martinique Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Martinique"
      },
      {
        "from": [
          "Hotel New Weston",
          "New Weston Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel New Weston"
      },
      {
        "from": [
          "Copley-plaza Hotel",
          "Hotel Copley-plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley-plaza Hotel"
      },
      {
        "from": [
          "Hotel Victoria",
          "Victoria Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Victoria"
      },
      {
        "from": [
          "Hotel Ponce De Leon",
          "Ponce De Leon Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Ponce De Leon"
      },
      {
        "from": [
          "Hotel Pontchartrain",
          "Pontchartrain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pontchartrain"
      },
      {
        "from": [
          "Hotel Lexington",
          "Lexington Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Lexington"
      },
      {
        "from": [
          "Revelstoke Hotel",
          "Hotel Revelstoke"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Revelstoke Hotel"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S. Kasuga",
          "Nippon Yusen Kaisha Ss Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S. Kasuga"
      },
      {
        "from": [
          "Pacific Mail S.S. Co.",
          "Pacific Mail Ss Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail S.S. Co."
      },
      {
        "from": [
          "Roanoke Hotel",
          "Hotel Roanoke"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roanoke Hotel"
      },
      {
        "from": [
          "Des Indes Hotel",
          "Hotel Des Indes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Des Indes Hotel"
      },
      {
        "from": [
          "Baltimore Hotel",
          "Hotel Baltimore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baltimore Hotel"
      },
      {
        "from": [
          "Hotel Westminster",
          "Westminster Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Westminster"
      },
      {
        "from": [
          "Hotel Statler",
          "Statler Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Statler"
      },
      {
        "from": [
          "Hotel Vendome And Profile House",
          "Profile House And Hotel Vendome"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome And Profile House"
      },
      {
        "from": [
          "U.S.S. New York",
          "U.S.S. New York "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. New York"
      },
      {
        "from": [
          "Gallatin Hotel",
          "Hotel Gallatin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gallatin Hotel"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbräu Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "New England Shorthand Reporters' Association",
          "New England Shorthand Reporter's Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Shorthand Reporters' Association"
      }
    ],
    "description": "Mass edit cells in column location_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "U.S.S. Raleigh",
          "U.S.S.Raleigh",
          "U.S.S.S.Raleigh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. Raleigh"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbrauhaus",
          "Hof Brau Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kobe Maru",
          "Nippon Yusen Kaisha S.S. Kobe Maru",
          "Nipppon Yusen Kaisha S.S. Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S.Kobe Maru"
      },
      {
        "from": [
          "Societa La Piemontese",
          "Societa'la Piemontese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Societa La Piemontese"
      },
      {
        "from": [
          "Hotel Dupont",
          "Hotel Du Pont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Dupont"
      },
      {
        "from": [
          "A.H. Meyer Rathskeller",
          "A.H.Meyer Rathskeller"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.H. Meyer Rathskeller"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kasuga",
          "Nippon Yusen Kaisha S.S. Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S.Kasuga"
      },
      {
        "from": [
          "Red Star Line S.S.Friesland",
          "Red Star Line Ss Friesland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line S.S.Friesland"
      },
      {
        "from": [
          "S. S. President Wilson",
          "S.S. President Wilson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S. S. President Wilson"
      },
      {
        "from": [
          "Bellevue - Stratford",
          "Bellevue-stratford"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue - Stratford"
      },
      {
        "from": [
          "United Air Lines",
          "United Airlines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "United Air Lines"
      },
      {
        "from": [
          "Flat Iron Resaurant And Cafe",
          "Flatiron Resaurant And Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Resaurant And Cafe"
      },
      {
        "from": [
          "Copley Plaza",
          "Copley-plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza"
      },
      {
        "from": [
          "Cie Gle Transatlantique",
          "Cie.Gle. Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cie Gle Transatlantique"
      },
      {
        "from": [
          "Bellevue Stratford Hotel",
          "Bellevue-stratford Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue Stratford Hotel"
      },
      {
        "from": [
          "Bundeshaus Restaurant",
          "Bundeshausrestaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bundeshaus Restaurant"
      },
      {
        "from": [
          "S.S. Amsterdam",
          "S.S.Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Amsterdam"
      },
      {
        "from": [
          "Friendly Sons Of St. Patrick",
          "Friendly Sons Of St.Patrick"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Friendly Sons Of St. Patrick"
      },
      {
        "from": [
          "Canadian Pacific Railway Co. S.S. Alberta",
          "Canadian Pacific Railway Co. S.S.Alberta"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Pacific Railway Co. S.S. Alberta"
      },
      {
        "from": [
          "Red Star Line S.S. Southwark",
          "Red Star Line S.S.Southwark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line S.S. Southwark"
      },
      {
        "from": [
          "U.S.S. San Francisco",
          "U.S.S.San Francisco"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. San Francisco"
      },
      {
        "from": [
          "The Round Table",
          "The Roundtable"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Round Table"
      },
      {
        "from": [
          "St. George's Society Of New York",
          "St.George's Society Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George's Society Of New York"
      },
      {
        "from": [
          "Menzie's Hotel",
          "Menzies'hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Menzie's Hotel"
      },
      {
        "from": [
          "Business Men's League Of St. Louis",
          "Business Men's League Of St.Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Business Men's League Of St. Louis"
      },
      {
        "from": [
          "Pig'n Whistle",
          "Pig N'whistle"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pig'n Whistle"
      },
      {
        "from": [
          "U. S. S. Wyoming",
          "U.S.S. Wyoming"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U. S. S. Wyoming"
      },
      {
        "from": [
          "The Southern Berkshire Society Of New York",
          "Southern Berkshire Society Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Southern Berkshire Society Of New York"
      },
      {
        "from": [
          "Rogers'restaurant",
          "Roger's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rogers'restaurant"
      },
      {
        "from": [
          "Cromwell Steamship Company",
          "Cromwelll Steamship Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cromwell Steamship Company"
      },
      {
        "from": [
          "Red Star Line Ss Westernland",
          "Red Star Line S.S.Westernland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line Ss Westernland"
      },
      {
        "from": [
          "O.D.",
          "O. D."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "O.D."
      },
      {
        "from": [
          "B&o Blue Line",
          "B.& O. Blue Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "B&o Blue Line"
      },
      {
        "from": [
          "St. Andrew's Society Of The State Of New York",
          "St.Andrews Society Of The State Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Andrew's Society Of The State Of New York"
      },
      {
        "from": [
          "U.S.M.S St. Paul",
          "U.S.M.S.St. Paul"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S St. Paul"
      },
      {
        "from": [
          "Canadian Pacific Railway Co. S.S.Athabasca",
          "Canadian Pacific Railway Co. S.S. Athabasca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Pacific Railway Co. S.S.Athabasca"
      },
      {
        "from": [
          "Hotel La Salle",
          "Hotel Lasalle"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel La Salle"
      },
      {
        "from": [
          "St. Francis Hotel",
          "St.Francis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Francis Hotel"
      },
      {
        "from": [
          "Smith & Mcnell's",
          "Smith & Mc Nells"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mcnell's"
      },
      {
        "from": [
          "Hotel Mcalpin",
          "Hotel Mc Alpin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Mcalpin"
      },
      {
        "from": [
          "Copley-plaza Hotel",
          "Copley Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley-plaza Hotel"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Nasuga",
          "Nippon Yusen Kaisha S.S. Nasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S.Nasuga"
      },
      {
        "from": [
          "U. S. S. New York",
          "U.S.S. New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U. S. S. New York"
      },
      {
        "from": [
          "U. S. S. Florida",
          "U.S.S. Florida"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U. S. S. Florida"
      },
      {
        "from": [
          "Pacific Mail Steamship Co.Trans Pacific Line",
          "Pacific Mail Steamship Co. Trans Pacific Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail Steamship Co.Trans Pacific Line"
      },
      {
        "from": [
          "S.S. America",
          "S.S.America"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. America"
      },
      {
        "from": [
          "Flat Iron Restaurant & Cafe",
          "Flatiron Restaurant & Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Restaurant & Cafe"
      },
      {
        "from": [
          "U.S.M.S.Philadelphia",
          "Usms Philadelphia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S.Philadelphia"
      },
      {
        "from": [
          "Dinner Menu, S. S. Vaderland, March 18th, 1910.",
          "Dinner Menu, S.S. Vaderland, March 18th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "Ritz Carlton Hotel",
          "Ritz-carlton Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton Hotel"
      },
      {
        "from": [
          "Waldorf Astoria",
          "Waldorf-astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Astoria"
      },
      {
        "from": [
          "Commercial Club Of St. Louis",
          "Commercial Club Of St.Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial Club Of St. Louis"
      },
      {
        "from": [
          "The Cobble Stones",
          "The Cobblestones"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cobble Stones"
      },
      {
        "from": [
          "The Rendez Vous",
          "The Rendez-vous"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Rendez Vous"
      },
      {
        "from": [
          "S.S. United States",
          "S. S. United States"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. United States"
      },
      {
        "from": [
          "Ritz Carlton",
          "Ritz-carlton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton"
      },
      {
        "from": [
          "St. Louis Club",
          "St.Louis Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Louis Club"
      },
      {
        "from": [
          "Flat Iron Restaurant",
          "Flatiron Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Restaurant"
      },
      {
        "from": [
          "Down Town Club",
          "Downtown Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Down Town Club"
      },
      {
        "from": [
          "Red Star Line Antwerpen Ny",
          "Red Star Line Antwerpen.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line Antwerpen Ny"
      },
      {
        "from": [
          "R.M.S. Oceanic",
          "R.M.S.Oceanic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Oceanic"
      },
      {
        "from": [
          "Cunard Steam Ship Company Limited",
          "Cunard Steamship Company Limited"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cunard Steam Ship Company Limited"
      },
      {
        "from": [
          "Smith & Mc Nell",
          "Smith & Mcnell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mc Nell"
      },
      {
        "from": [
          "Chicago Stationers Association",
          "Chicagos Stationers Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago Stationers Association"
      },
      {
        "from": [
          "A.W. Dennett",
          "A.W.Dennett"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.W. Dennett"
      },
      {
        "from": [
          "Imperial Yacht Club Of St. Petersburg",
          "Imperial Yacht Club Of St.Petersburg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial Yacht Club Of St. Petersburg"
      },
      {
        "from": [
          "Café Des Beaux Arts",
          "Café Des Beaux-arts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café Des Beaux Arts"
      }
    ],
    "description": "Mass edit cells in column location_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Nordeutscher Lloyd Bremen",
          "Norddeutscherrr Lloyd Bremen",
          "Norddeutscher Lloyd Breman",
          "Nordeuscher Lloyd Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Toyo Kisen Kaisha Hong Kong Maru",
          "Toyo Kisen Kaisha Hing Kong Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Toyo Kisen Kaisha Hong Kong Maru"
      },
      {
        "from": [
          "Parker House",
          "Parker's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House"
      },
      {
        "from": [
          "King Umberto And Queen Margharita",
          "King Umberto And Queen Margherita"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Umberto And Queen Margharita"
      },
      {
        "from": [
          "Louisville & Nashville Railroaad The Pullman Co.",
          "Louisville & Nashville Railroad The Pullmana Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Louisville & Nashville Railroaad The Pullman Co."
      },
      {
        "from": [
          "Confrerie De La Chaine Des Rotisseurs",
          "Confrerie De La Chiane Des Rotisseurs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Confrerie De La Chaine Des Rotisseurs"
      },
      {
        "from": [
          "Boston & Bangor Ssteamship Company",
          "Boston & Bangor Steamship Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston & Bangor Ssteamship Company"
      },
      {
        "from": [
          "The Cortland",
          "The Cortlandt"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cortland"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kasuga",
          "Nippon Yusen Kaisa S.S.Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S.Kasuga"
      },
      {
        "from": [
          "Hotel Brevoort",
          "Hotel Breevort"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Brevoort"
      },
      {
        "from": [
          "New England Society Of Pennsylvania",
          "New England Society Of Pennsylvnia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Society Of Pennsylvania"
      },
      {
        "from": [
          "The Lotos Club",
          "The Lotus Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Lotos Club"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen America",
          "Norddeutscher Lloyd Bremen Amerika"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen America"
      },
      {
        "from": [
          "Gardner & Smith",
          "Gerdner & Smith"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gardner & Smith"
      },
      {
        "from": [
          "Del Coronada Hotel",
          "Del Coronadao Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Del Coronada Hotel"
      },
      {
        "from": [
          "Young Men's Christian Association",
          "Young Man's Christian Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Young Men's Christian Association"
      },
      {
        "from": [
          "Queen Elizabeth 2",
          "Queen Elizabeth Ii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Queen Elizabeth 2"
      },
      {
        "from": [
          "Phililexian Society Of Columbia University",
          "Philolexian Society Of Columbia University"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Phililexian Society Of Columbia University"
      }
    ],
    "description": "Mass edit cells in column location_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Hamburg Amerika Linie",
          "Hamburg America Linie",
          "Hamburg Amerika Line",
          "Hamburg America Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg Amerika Linie"
      },
      {
        "from": [
          "Norddeutcher Lloyd Bremen",
          "Nordeutcher Lloyd, Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutcher Lloyd Bremen"
      },
      {
        "from": [
          "American Cotton Manufacturers Asociation",
          "American Cotton Manufacturers' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Cotton Manufacturers Asociation"
      },
      {
        "from": [
          "U.S.A.Army Transport Warren",
          "U.S.Army Transport Warren"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.A.Army Transport Warren"
      },
      {
        "from": [
          "Nippon Yusen Kaisha",
          "Nippon Yusen Kaisa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha"
      },
      {
        "from": [
          "King Karl And Queen Olga Of Wurtemberg",
          "King Karl And Queen Olga Of Wurtinberg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Karl And Queen Olga Of Wurtemberg"
      },
      {
        "from": [
          "Promenade Café",
          "Promenade Cafés"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Promenade Café"
      },
      {
        "from": [
          "National Wholesale Druggists' Association",
          "National Wholesale Druggests' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "National Wholesale Druggists' Association"
      },
      {
        "from": [
          "Wiehl & Widmann",
          "Wiehl & Widman"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wiehl & Widmann"
      },
      {
        "from": [
          "R.M.S. Queen Elizabeth\"\"",
          "R.M.S. Queen Elizabeth 2"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Queen Elizabeth\"\""
      },
      {
        "from": [
          "Wisconsin Bankers Association",
          "Wisconsin Bankers' Asociation"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wisconsin Bankers Association"
      },
      {
        "from": [
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant",
          "Edward F. Langs's Ladies' And Gents Lunch Room And Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant"
      },
      {
        "from": [
          "Manhasset Club",
          "Manhassett Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhasset Club"
      },
      {
        "from": [
          "Colonnade Restaurant",
          "Colonade Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colonnade Restaurant"
      },
      {
        "from": [
          "The New Haven Railroad",
          "The New Haven R. R. Railroad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Haven Railroad"
      },
      {
        "from": [
          "Nordeutscher Lloyd",
          "Norddeutscher Lloyd"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nordeutscher Lloyd"
      },
      {
        "from": [
          "Jansen's Restaurant",
          "Janssen's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jansen's Restaurant"
      }
    ],
    "description": "Mass edit cells in column location_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutcher Lloyd Bremen",
          "Norddeutecher Lloyd Bremen",
          "Norddeutscher Lloyds Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutcher Lloyd Bremen",
          "Norddeutecher Lloyd Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "American House",
          "American Houe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American House"
      },
      {
        "from": [
          "Boston Merchants Association",
          "Boston Merchants Associationi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston Merchants Association"
      },
      {
        "from": [
          "Pocono Mountain House",
          "Pocano Mountain House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pocono Mountain House"
      },
      {
        "from": [
          "Tadich Grill",
          "Tadlich Grill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tadich Grill"
      },
      {
        "from": [
          "Red Star Line Antwerpen Ny",
          "Red Star Line Antwepen Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line Antwerpen Ny"
      },
      {
        "from": [
          "The Cortland",
          "The Portland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cortland"
      },
      {
        "from": [
          "Clifton House",
          "Clinton House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clifton House"
      },
      {
        "from": [
          "La Camelia",
          "Le Camelia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "La Camelia"
      },
      {
        "from": [
          "Twentieth Century Aldermanic Association",
          "Twentieth Century Aldermanir Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Twentieth Century Aldermanic Association"
      },
      {
        "from": [
          "Hotel Netherland",
          "Hotel Nethrland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Netherland"
      },
      {
        "from": [
          "New York Life Insuance Company",
          "New York Life Insurance Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Life Insuance Company"
      },
      {
        "from": [
          "Griswold House",
          "Griswald House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Griswold House"
      },
      {
        "from": [
          "Saratoga Racing Association",
          "Saratogy Racing Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saratoga Racing Association"
      },
      {
        "from": [
          "Flat Iron Resaurant And Cafe",
          "Flat Iron Restaurant And Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Resaurant And Cafe"
      },
      {
        "from": [
          "Greenhut-siegel Cooper Co.",
          "Greehut-siegel Cooper Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Greenhut-siegel Cooper Co."
      },
      {
        "from": [
          "Royal Alexandria Hotel",
          "Royal Alexandra Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Royal Alexandria Hotel"
      },
      {
        "from": [
          "Pacific Mail Steamship Co.Trans Paciic Line",
          "Pacific Mail Steamship Co.Trans Pacific Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail Steamship Co.Trans Paciic Line"
      },
      {
        "from": [
          "Cortland",
          "Cortlandt"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cortland"
      },
      {
        "from": [
          "Bermuda Catering Co.",
          "Bermuda Catering Coy."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bermuda Catering Co."
      },
      {
        "from": [
          "Statler's Hotel",
          "Tatler's Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Statler's Hotel"
      },
      {
        "from": [
          "Bellini",
          "Cellini"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellini"
      },
      {
        "from": [
          "Royal Poinciana",
          "Royal Ponciana"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Royal Poinciana"
      },
      {
        "from": [
          "Hotel Del Coronado",
          "Horel Del Coronado"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Del Coronado"
      },
      {
        "from": [
          "Hotel Walton",
          "Hotel Walson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Walton"
      },
      {
        "from": [
          "Pullman Dining Car Service The President",
          "Pullman Dining Car Serfvice The President"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pullman Dining Car Service The President"
      },
      {
        "from": [
          "Hamburg Amerika Linie Steamer Furst Bismarck",
          "Hanburg Amerika Linie Steamer Furst Bismarck"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg Amerika Linie Steamer Furst Bismarck"
      },
      {
        "from": [
          "America Association Of Public Accountants",
          "American Association Of Public Accountants"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "America Association Of Public Accountants"
      },
      {
        "from": [
          "The Bellevue-stratford",
          "The Bellvue-stratford"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Bellevue-stratford"
      },
      {
        "from": [
          "Palace Hotel Restaurant And Ladies Grill Room",
          "Palace Hotel Restaurat And Ladies Grill Room"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel Restaurant And Ladies Grill Room"
      },
      {
        "from": [
          "S.S. Nieuw Amsterdam",
          "S.S. Niew Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Nieuw Amsterdam"
      },
      {
        "from": [
          "Holland America Line",
          "Holland American Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Holland America Line"
      },
      {
        "from": [
          "Fisherman's Grotto",
          "Fishermen's Grotto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fisherman's Grotto"
      },
      {
        "from": [
          "Hotel Pontchartrain",
          "Hotel Ponchartrain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pontchartrain"
      },
      {
        "from": [
          "Pacific Mail Steamship Company",
          "Pacific Mail Steamshp Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail Steamship Company"
      },
      {
        "from": [
          "The White Turkeys",
          "The White Turkey"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The White Turkeys"
      },
      {
        "from": [
          "Great Northern System Dining Car",
          "Great Northern System Dining Cars"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Great Northern System Dining Car"
      },
      {
        "from": [
          "Hotel Men's Mutual Benefit Aasociation",
          "Hotel Men's Mutual Benefit Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Men's Mutual Benefit Aasociation"
      },
      {
        "from": [
          "Luncheon Menu, S. S. Vaderland, March 18th, 1910.",
          "Luncheon Menu, S. S. Vaderland, March 19th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "Hotel D'angleterre",
          "Hotel D'angeleterre"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel D'angleterre"
      },
      {
        "from": [
          "Ocean Steamship Co.",
          "Ocean Steamshop Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ocean Steamship Co."
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kasuga",
          "Nippon Yusen Kaisha S.S.Nasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S.Kasuga"
      },
      {
        "from": [
          "Hotel Savoy",
          "Hotel Saboy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy"
      },
      {
        "from": [
          "Albemarle Hotel",
          "Albermarle Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albemarle Hotel"
      },
      {
        "from": [
          "Childs' Lunch Rooms",
          "Childs' Lunch Room"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Childs' Lunch Rooms"
      },
      {
        "from": [
          "Hotel Seiler",
          "Hotels Seiler"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Seiler"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kobe Maru",
          "Nippon Yusen Kaisha S.S.Kobi Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S.Kobe Maru"
      },
      {
        "from": [
          "Columbia University Restauant",
          "Columbia University Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Columbia University Restauant"
      },
      {
        "from": [
          "El Tovar Hotel",
          "El Covar Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "El Tovar Hotel"
      },
      {
        "from": [
          "Cigar Leaf Tobacco Board Of Trade Of The United States",
          "Jcigar Leaf Tobacco Board Of Trade Of The United States"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cigar Leaf Tobacco Board Of Trade Of The United States"
      },
      {
        "from": [
          "Pennsylvania Railroad Dining Cars",
          "Pennsylvania Railroad Dining Car"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pennsylvania Railroad Dining Cars"
      },
      {
        "from": [
          "New York Southern Society",
          "New York Southen Society"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Southern Society"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyds Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Delmonicos",
          "Delmonico"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos"
      },
      {
        "from": [
          "King Edward Vii",
          "King Edard Vii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King Edward Vii"
      },
      {
        "from": [
          "Riggs House",
          "Briggs House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Riggs House"
      },
      {
        "from": [
          "Henri Iv Restaurant",
          "Henri Iv Restaurants"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Henri Iv Restaurant"
      },
      {
        "from": [
          "Hamburg Amerika Linie",
          "Hamburg Armerika Linie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg Amerika Linie"
      },
      {
        "from": [
          "Compagnie General Transatlantique",
          "Compngnie General Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compagnie General Transatlantique"
      },
      {
        "from": [
          "Carleton Club",
          "Carlton Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carleton Club"
      },
      {
        "from": [
          "Commercial Club Of Cincinnati",
          "C0mmercial Club Of Cincinnati"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial Club Of Cincinnati"
      },
      {
        "from": [
          "Sheraton Hotel",
          "Sheraton Hotels"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sheraton Hotel"
      },
      {
        "from": [
          "Clover Club Of Boston",
          "Cover Club Of Boston"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clover Club Of Boston"
      },
      {
        "from": [
          "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota",
          "Military Order Of The Loyal Legion Of The Unitd States Commandery Of The State Of Minnesota"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota"
      },
      {
        "from": [
          "Nippon Yusen Kaisha",
          "Nippon Pusen Kaisha"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha"
      },
      {
        "from": [
          "Eaton's",
          "Keaton's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eaton's"
      },
      {
        "from": [
          "American Hotel",
          "Americana Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Hotel"
      },
      {
        "from": [
          "Aldine Club Rooms",
          "Aldine Club Rooma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aldine Club Rooms"
      },
      {
        "from": [
          "Rathskeller",
          "Ratskeller"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rathskeller"
      },
      {
        "from": [
          "Palace Hotel Restaurant",
          "Palace Hotel Restaurat"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel Restaurant"
      },
      {
        "from": [
          "First Panel Sheriff's Jury",
          "First Panel Sherfiff's Jury"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "First Panel Sheriff's Jury"
      },
      {
        "from": [
          "Restaurant Name Andor Location Not Given",
          "Restaurtant Name Andor Location Not Given"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Name Andor Location Not Given"
      },
      {
        "from": [
          "Poland Spring House",
          "Poland Springs House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Poland Spring House"
      },
      {
        "from": [
          "Mayflower Hotel",
          "Mayflower Hotels"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mayflower Hotel"
      },
      {
        "from": [
          "Dobbeltskrue Postdampskibet",
          "Dobbelskrue Postdampskibet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dobbeltskrue Postdampskibet"
      },
      {
        "from": [
          "M.F.Lyons Dining Room",
          "M.F.Lyons Dining Rooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "M.F.Lyons Dining Room"
      },
      {
        "from": [
          "Trustees Of The Missouri Botanical Garden",
          "Trustees Of The Missoui Botanical Garden"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Trustees Of The Missouri Botanical Garden"
      },
      {
        "from": [
          "Oceanic Steamship Company Sierra",
          "Oceanic Sreamship Company Sierra"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Company Sierra"
      },
      {
        "from": [
          "Aldine Club",
          "Alpine Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aldine Club"
      },
      {
        "from": [
          "Ports O' Call",
          "Ports Of Call"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ports O' Call"
      }
    ],
    "description": "Mass edit cells in column location_cluster"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location_cluster",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Chamber Of Commerce Of The State Of New York",
          "Chamber Of Commerce Of State Of New York",
          "Chamber Of Commerce Of The State Of Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chamber Of Commerce Of The State Of New York"
      },
      {
        "from": [
          "Oceanic Steamship Co. S.S.Zealandia",
          "Oceanic Steamship Company S.S.Zealander",
          "Oceanic Steamship Company S.S. Zealandia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Co. S.S.Zealandia"
      },
      {
        "from": [
          "College Of City Of New York",
          "College Of The City Of New York",
          "College Of The City Of New York Alumni"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "College Of City Of New York"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyd Bremen Line",
          "Norddeutscher Lloyd Bremen America"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      }
    ],
    "description": "Mass edit cells in column location_cluster"
  }
]